openapi: 3.1.0
info:
  title: OpenStack Block Storage API
  description: Note
  version: '3.71'
paths:
  /v3/:
    get:
      description: Shows details for Block Storage API v3.
      operationId: :get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RootListResponse'
      tags:
      - version
      x-openstack:
        min-ver: '3.0'
      summary: Show API v3 details
  /v3/{project_id}/volumes/detail:
    parameters:
    - $ref: '#/components/parameters/volumes_detail_project_id'
    get:
      parameters:
      - $ref: '#/components/parameters/all_tenants'
      - $ref: '#/components/parameters/sort'
      - $ref: '#/components/parameters/sort_key'
      - $ref: '#/components/parameters/sort_dir'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      - $ref: '#/components/parameters/marker'
      - $ref: '#/components/parameters/with_count'
      - $ref: '#/components/parameters/created_at'
      - $ref: '#/components/parameters/updated_at'
      - $ref: '#/components/parameters/consumes_quota'
      description: 'Lists all Block Storage volumes, with details, that the project
        can access,

        since v3.31 if non-admin users specify invalid filters in the url, API will

        return bad request.'
      operationId: project_id/volumes/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumesDetailResponse'
      tags:
      - volumes
      summary: List accessible volumes with details
  /v3/{project_id}/volumes/summary:
    parameters:
    - $ref: '#/components/parameters/volumes_summary_project_id'
    get:
      parameters:
      - $ref: '#/components/parameters/all_tenants'
      description: 'Display volumes summary with total number of volumes and total
        size in GB.

        Available since API microversion 3.12.'
      operationId: project_id/volumes/summary:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumesSummaryResponse'
      tags:
      - volumes
      x-openstack:
        min-ver: '3.12'
      summary: Get volumes summary
  /v3/{project_id}/volumes:
    parameters:
    - $ref: '#/components/parameters/volumes_project_id'
    get:
      parameters:
      - $ref: '#/components/parameters/all_tenants'
      - $ref: '#/components/parameters/sort'
      - $ref: '#/components/parameters/sort_key'
      - $ref: '#/components/parameters/sort_dir'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      - $ref: '#/components/parameters/marker'
      - $ref: '#/components/parameters/with_count'
      - $ref: '#/components/parameters/created_at'
      - $ref: '#/components/parameters/updated_at'
      - $ref: '#/components/parameters/consumes_quota'
      description: 'Lists summary information for all Block Storage volumes that the

        project can access, since v3.31 if non-admin users specify invalid

        filters in the url, API will return bad request.'
      operationId: project_id/volumes:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumesListResponse'
      tags:
      - volumes
      summary: List accessible volumes
  /v3/{project_id}/volumes/{id}:
    parameters:
    - $ref: '#/components/parameters/volumes_project_id'
    - $ref: '#/components/parameters/volumes_id'
    get:
      description: Return data about the given volume.
      operationId: project_id/volumes/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeShowResponse'
      tags:
      - volumes
  /v3/volumes/detail:
    get:
      parameters:
      - $ref: '#/components/parameters/all_tenants'
      - $ref: '#/components/parameters/sort'
      - $ref: '#/components/parameters/sort_key'
      - $ref: '#/components/parameters/sort_dir'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      - $ref: '#/components/parameters/marker'
      - $ref: '#/components/parameters/with_count'
      - $ref: '#/components/parameters/created_at'
      - $ref: '#/components/parameters/updated_at'
      - $ref: '#/components/parameters/consumes_quota'
      description: Returns a detailed list of volumes.
      operationId: volumes/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumesDetailResponse'
      tags:
      - volumes
  /v3/volumes/summary:
    get:
      description: Return summary of volumes.
      operationId: volumes/summary:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumesSummaryResponse'
      tags:
      - volumes
      x-openstack:
        min-ver: '3.12'
  /v3/volumes:
    get:
      parameters:
      - $ref: '#/components/parameters/all_tenants'
      - $ref: '#/components/parameters/sort'
      - $ref: '#/components/parameters/sort_key'
      - $ref: '#/components/parameters/sort_dir'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      - $ref: '#/components/parameters/marker'
      - $ref: '#/components/parameters/with_count'
      - $ref: '#/components/parameters/created_at'
      - $ref: '#/components/parameters/updated_at'
      - $ref: '#/components/parameters/consumes_quota'
      description: Returns a summary list of volumes.
      operationId: volumes:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumesListResponse'
      tags:
      - volumes
  /v3/volumes/{id}:
    parameters:
    - $ref: '#/components/parameters/volumes_id'
    get:
      description: Return data about the given volume.
      operationId: volumes/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeShowResponse'
      tags:
      - volumes
  /v3/{project_id}/messages:
    parameters:
    - $ref: '#/components/parameters/messages_project_id'
    get:
      parameters:
      - $ref: '#/components/parameters/sort'
      - $ref: '#/components/parameters/sort_key'
      - $ref: '#/components/parameters/sort_dir'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      - $ref: '#/components/parameters/marker'
      description: 'Lists all messages, since v3.31 if non-admin users

        specify invalid filters in the url, API will return bad request.'
      operationId: project_id/messages:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessagesListResponse'
      tags:
      - messages
      x-openstack:
        min-ver: '3.3'
      summary: List messages
  /v3/{project_id}/messages/{id}:
    parameters:
    - $ref: '#/components/parameters/messages_project_id'
    - $ref: '#/components/parameters/messages_id'
    get:
      description: Return the given message.
      operationId: project_id/messages/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageShowResponse'
      tags:
      - messages
      x-openstack:
        min-ver: '3.3'
  /v3/messages:
    get:
      parameters:
      - $ref: '#/components/parameters/sort'
      - $ref: '#/components/parameters/sort_key'
      - $ref: '#/components/parameters/sort_dir'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      - $ref: '#/components/parameters/marker'
      description: Returns a list of messages, transformed through view builder.
      operationId: messages:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessagesListResponse'
      tags:
      - messages
      x-openstack:
        min-ver: '3.3'
  /v3/messages/{id}:
    parameters:
    - $ref: '#/components/parameters/messages_id'
    get:
      description: Return the given message.
      operationId: messages/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageShowResponse'
      tags:
      - messages
      x-openstack:
        min-ver: '3.3'
  /v3/{project_id}/clusters/detail:
    parameters:
    - $ref: '#/components/parameters/clusters_detail_project_id'
    get:
      parameters:
      - $ref: '#/components/parameters/cluster_frozen'
      - $ref: '#/components/parameters/cluster_active_backend_id'
      - $ref: '#/components/parameters/cluster_name'
      - $ref: '#/components/parameters/cluster_binary'
      - $ref: '#/components/parameters/cluster_is_up'
      - $ref: '#/components/parameters/cluster_disabled'
      - $ref: '#/components/parameters/cluster_num_hosts'
      - $ref: '#/components/parameters/cluster_num_down_hosts'
      - $ref: '#/components/parameters/cluster_replication_status'
      description: 'Lists all clusters with details.


        Available starting in the 3.7 microversion.'
      operationId: project_id/clusters/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClustersDetailResponse'
      tags:
      - clusters
      x-openstack:
        min-ver: '3.7'
      summary: List clusters with details
  /v3/{project_id}/clusters:
    parameters:
    - $ref: '#/components/parameters/clusters_project_id'
    get:
      parameters:
      - $ref: '#/components/parameters/cluster_name'
      - $ref: '#/components/parameters/cluster_binary'
      - $ref: '#/components/parameters/cluster_is_up'
      - $ref: '#/components/parameters/cluster_disabled'
      - $ref: '#/components/parameters/cluster_num_hosts'
      - $ref: '#/components/parameters/cluster_num_down_hosts'
      - $ref: '#/components/parameters/cluster_replication_status'
      description: 'Lists all clusters.


        Available starting in the 3.7 microversion.'
      operationId: project_id/clusters:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClustersListResponse'
      tags:
      - clusters
      x-openstack:
        min-ver: '3.7'
      summary: List clusters
  /v3/{project_id}/clusters/{id}:
    parameters:
    - $ref: '#/components/parameters/clusters_project_id'
    - $ref: '#/components/parameters/clusters_id'
    get:
      description: Return data for a given cluster name with optional binary.
      operationId: project_id/clusters/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterShowResponse'
      tags:
      - clusters
      x-openstack:
        min-ver: '3.7'
  /v3/clusters/detail:
    get:
      parameters:
      - $ref: '#/components/parameters/cluster_frozen'
      - $ref: '#/components/parameters/cluster_active_backend_id'
      - $ref: '#/components/parameters/cluster_name'
      - $ref: '#/components/parameters/cluster_binary'
      - $ref: '#/components/parameters/cluster_is_up'
      - $ref: '#/components/parameters/cluster_disabled'
      - $ref: '#/components/parameters/cluster_num_hosts'
      - $ref: '#/components/parameters/cluster_num_down_hosts'
      - $ref: '#/components/parameters/cluster_replication_status'
      description: 'Return a detailed list of all existing clusters.


        Filter by is_up, disabled, num_hosts, and num_down_hosts.'
      operationId: clusters/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClustersDetailResponse'
      tags:
      - clusters
      x-openstack:
        min-ver: '3.7'
  /v3/clusters:
    get:
      parameters:
      - $ref: '#/components/parameters/cluster_name'
      - $ref: '#/components/parameters/cluster_binary'
      - $ref: '#/components/parameters/cluster_is_up'
      - $ref: '#/components/parameters/cluster_disabled'
      - $ref: '#/components/parameters/cluster_num_hosts'
      - $ref: '#/components/parameters/cluster_num_down_hosts'
      - $ref: '#/components/parameters/cluster_replication_status'
      description: 'Return a non detailed list of all existing clusters.


        Filter by is_up, disabled, num_hosts, and num_down_hosts.'
      operationId: clusters:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClustersListResponse'
      tags:
      - clusters
      x-openstack:
        min-ver: '3.7'
  /v3/clusters/{id}:
    parameters:
    - $ref: '#/components/parameters/clusters_id'
    get:
      description: Return data for a given cluster name with optional binary.
      operationId: clusters/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterShowResponse'
      tags:
      - clusters
      x-openstack:
        min-ver: '3.7'
  /v3/{project_id}/types:
    parameters:
    - $ref: '#/components/parameters/types_project_id'
    get:
      parameters:
      - $ref: '#/components/parameters/type_is_public'
      - $ref: '#/components/parameters/type_sort'
      - $ref: '#/components/parameters/type_sort_key'
      - $ref: '#/components/parameters/type_sort_dir'
      - $ref: '#/components/parameters/type_limit'
      - $ref: '#/components/parameters/type_marker'
      - $ref: '#/components/parameters/type_offset'
      description: 'Lists volume types.


        To determine which of these is the default type that will be used if you

        do not specify one in the [Create a volume](#create-a-volume) request, use
        the

        [Show default volume type](#show-default-volume-type) request.


        *Note to users:* There may be a volume type named `__DEFAULT__` in the

        list. Try not to use this volume type, unless necessary or instructed by the

        operator, in a [Create a volume](#create-a-volume) request. If you wish to
        create a volume of

        *your* default volume type, simply omit the `volume_type` parameter in your

        [Create a volume](#create-a-volume) request.


        *Note to operators:* The `__DEFAULT__` volume type was introduced in

        the Train release as a placeholder to prevent the creation of untyped

        volumes. Under the proper conditions, it may be removed from your

        deployment. Consult the Default Volume Types section in

        [Cinder Administration Guide](https://docs.openstack.org/cinder/latest/admin/index.html)

        for details.'
      operationId: project_id/types:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypesListResponse'
      tags:
      - types
      summary: List all volume types
  /v3/{project_id}/types/{id}:
    parameters:
    - $ref: '#/components/parameters/types_project_id'
    - $ref: '#/components/parameters/types_id'
    get:
      description: Return a single volume type item.
      operationId: project_id/types/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeShowResponse'
      tags:
      - types
  /v3/types:
    get:
      description: Returns the list of volume types.
      operationId: types:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypesListResponse'
      tags:
      - types
  /v3/types/{id}:
    parameters:
    - $ref: '#/components/parameters/types_id'
    get:
      description: Return a single volume type item.
      operationId: types/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeShowResponse'
      tags:
      - types
  /v3/{project_id}/group_types:
    parameters:
    - $ref: '#/components/parameters/group_types_project_id'
    get:
      parameters:
      - $ref: '#/components/parameters/group_all_tenants'
      - $ref: '#/components/parameters/group_sort'
      - $ref: '#/components/parameters/group_sort_key'
      - $ref: '#/components/parameters/group_sort_dir'
      - $ref: '#/components/parameters/group_limit'
      - $ref: '#/components/parameters/group_marker'
      - $ref: '#/components/parameters/group_offset'
      description: Lists group types.
      operationId: project_id/group_types:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group_TypesListResponse'
      tags:
      - group_types
      x-openstack:
        min-ver: '3.11'
      summary: List group types
  /v3/{project_id}/group_types/{id}:
    parameters:
    - $ref: '#/components/parameters/group_types_project_id'
    - $ref: '#/components/parameters/group_types_id'
    get:
      description: Return a single group type item.
      operationId: project_id/group_types/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group_TypeShowResponse'
      tags:
      - group_types
      x-openstack:
        min-ver: '3.11'
  /v3/group_types:
    get:
      parameters:
      - $ref: '#/components/parameters/group_all_tenants'
      - $ref: '#/components/parameters/group_sort'
      - $ref: '#/components/parameters/group_sort_key'
      - $ref: '#/components/parameters/group_sort_dir'
      - $ref: '#/components/parameters/group_limit'
      - $ref: '#/components/parameters/group_marker'
      - $ref: '#/components/parameters/group_offset'
      description: Returns the list of group types.
      operationId: group_types:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group_TypesListResponse'
      tags:
      - group_types
      x-openstack:
        min-ver: '3.11'
  /v3/group_types/{id}:
    parameters:
    - $ref: '#/components/parameters/group_types_id'
    get:
      description: Return a single group type item.
      operationId: group_types/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group_TypeShowResponse'
      tags:
      - group_types
      x-openstack:
        min-ver: '3.11'
  /v3/{project_id}/group_types/{group_type_id}/group_specs:
    parameters:
    - $ref: '#/components/parameters/group_types_group_specs_project_id'
    - $ref: '#/components/parameters/group_types_group_specs_group_type_id'
    get:
      description: List all the group specs for a group type,
      operationId: project_id/group_types/group_type_id/group_specs:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group_TypesGroup_SpecsListResponse'
      tags:
      - group_types
      x-openstack:
        min-ver: '3.11'
      summary: List group specs for a group type
  /v3/{project_id}/group_types/{group_type_id}/group_specs/{id}:
    parameters:
    - $ref: '#/components/parameters/group_types_group_specs_project_id'
    - $ref: '#/components/parameters/group_types_group_specs_group_type_id'
    - $ref: '#/components/parameters/group_types_group_specs_id'
    get:
      description: Return a single extra spec item.
      operationId: project_id/group_types/group_type_id/group_specs/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group_TypesGroup_SpecShowResponse'
      tags:
      - group_types
      x-openstack:
        min-ver: '3.11'
  /v3/group_types/{group_type_id}/group_specs:
    parameters:
    - $ref: '#/components/parameters/group_types_group_specs_group_type_id'
    get:
      description: Returns the list of group specs for a given group type.
      operationId: group_types/group_type_id/group_specs:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group_TypesGroup_SpecsListResponse'
      tags:
      - group_types
      x-openstack:
        min-ver: '3.11'
  /v3/group_types/{group_type_id}/group_specs/{id}:
    parameters:
    - $ref: '#/components/parameters/group_types_group_specs_group_type_id'
    - $ref: '#/components/parameters/group_types_group_specs_id'
    get:
      description: Return a single extra spec item.
      operationId: group_types/group_type_id/group_specs/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group_TypesGroup_SpecShowResponse'
      tags:
      - group_types
      x-openstack:
        min-ver: '3.11'
  /v3/{project_id}/groups/detail:
    parameters:
    - $ref: '#/components/parameters/groups_detail_project_id'
    get:
      parameters:
      - $ref: '#/components/parameters/group_all_tenants'
      - $ref: '#/components/parameters/group_sort'
      - $ref: '#/components/parameters/group_sort_key'
      - $ref: '#/components/parameters/group_sort_dir'
      - $ref: '#/components/parameters/group_limit'
      - $ref: '#/components/parameters/group_marker'
      - $ref: '#/components/parameters/group_offset'
      description: 'Lists groups with details, since v3.31 if non-admin

        users specify invalid filters in the url, API will return bad request.'
      operationId: project_id/groups/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsDetailResponse'
      tags:
      - groups
      x-openstack:
        min-ver: '3.13'
      summary: List groups with details
  /v3/{project_id}/groups:
    parameters:
    - $ref: '#/components/parameters/groups_project_id'
    get:
      parameters:
      - $ref: '#/components/parameters/group_all_tenants'
      - $ref: '#/components/parameters/group_sort'
      - $ref: '#/components/parameters/group_sort_key'
      - $ref: '#/components/parameters/group_sort_dir'
      - $ref: '#/components/parameters/group_limit'
      - $ref: '#/components/parameters/group_marker'
      - $ref: '#/components/parameters/group_offset'
      description: 'Lists groups. Since v3.31 if non-admin users specify

        invalid filters in the url, API will return bad request.'
      operationId: project_id/groups:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsListResponse'
      tags:
      - groups
      x-openstack:
        min-ver: '3.13'
      summary: List groups
  /v3/{project_id}/groups/{id}:
    parameters:
    - $ref: '#/components/parameters/groups_project_id'
    - $ref: '#/components/parameters/groups_id'
    get:
      description: Return data about the given group.
      operationId: project_id/groups/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupShowResponse'
      tags:
      - groups
      x-openstack:
        min-ver: '3.13'
  /v3/groups/detail:
    get:
      parameters:
      - $ref: '#/components/parameters/group_all_tenants'
      - $ref: '#/components/parameters/group_sort'
      - $ref: '#/components/parameters/group_sort_key'
      - $ref: '#/components/parameters/group_sort_dir'
      - $ref: '#/components/parameters/group_limit'
      - $ref: '#/components/parameters/group_marker'
      - $ref: '#/components/parameters/group_offset'
      description: Returns a detailed list of groups.
      operationId: groups/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsDetailResponse'
      tags:
      - groups
      x-openstack:
        min-ver: '3.13'
  /v3/groups:
    get:
      parameters:
      - $ref: '#/components/parameters/group_all_tenants'
      - $ref: '#/components/parameters/group_sort'
      - $ref: '#/components/parameters/group_sort_key'
      - $ref: '#/components/parameters/group_sort_dir'
      - $ref: '#/components/parameters/group_limit'
      - $ref: '#/components/parameters/group_marker'
      - $ref: '#/components/parameters/group_offset'
      description: Returns a summary list of groups.
      operationId: groups:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsListResponse'
      tags:
      - groups
      x-openstack:
        min-ver: '3.13'
  /v3/groups/{id}:
    parameters:
    - $ref: '#/components/parameters/groups_id'
    get:
      description: Return data about the given group.
      operationId: groups/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupShowResponse'
      tags:
      - groups
      x-openstack:
        min-ver: '3.13'
  /v3/{project_id}/group_snapshots/detail:
    parameters:
    - $ref: '#/components/parameters/group_snapshots_detail_project_id'
    get:
      parameters:
      - $ref: '#/components/parameters/group_all_tenants'
      - $ref: '#/components/parameters/group_sort'
      - $ref: '#/components/parameters/group_sort_key'
      - $ref: '#/components/parameters/group_sort_dir'
      - $ref: '#/components/parameters/group_limit'
      - $ref: '#/components/parameters/group_marker'
      - $ref: '#/components/parameters/group_offset'
      description: 'Lists all group snapshots with details. Since v3.31 if non-admin

        users specify invalid filters in the url, API will return bad request.'
      operationId: project_id/group_snapshots/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group_SnapshotsDetailResponse'
      tags:
      - group_snapshots
      x-openstack:
        min-ver: '3.14'
      summary: List group snapshots with details
  /v3/{project_id}/group_snapshots:
    parameters:
    - $ref: '#/components/parameters/group_snapshots_project_id'
    get:
      parameters:
      - $ref: '#/components/parameters/group_all_tenants'
      - $ref: '#/components/parameters/group_sort'
      - $ref: '#/components/parameters/group_sort_key'
      - $ref: '#/components/parameters/group_sort_dir'
      - $ref: '#/components/parameters/group_limit'
      - $ref: '#/components/parameters/group_marker'
      - $ref: '#/components/parameters/group_offset'
      description: 'Lists all group snapshots, since v3.31 if non-admin users

        specify invalid filters in the url, API will return bad request.'
      operationId: project_id/group_snapshots:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group_SnapshotsListResponse'
      tags:
      - group_snapshots
      x-openstack:
        min-ver: '3.14'
      summary: List group snapshots
  /v3/{project_id}/group_snapshots/{id}:
    parameters:
    - $ref: '#/components/parameters/group_snapshots_project_id'
    - $ref: '#/components/parameters/group_snapshots_id'
    get:
      description: Return data about the given group_snapshot.
      operationId: project_id/group_snapshots/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group_SnapshotShowResponse'
      tags:
      - group_snapshots
      x-openstack:
        min-ver: '3.14'
  /v3/group_snapshots/detail:
    get:
      parameters:
      - $ref: '#/components/parameters/group_all_tenants'
      - $ref: '#/components/parameters/group_sort'
      - $ref: '#/components/parameters/group_sort_key'
      - $ref: '#/components/parameters/group_sort_dir'
      - $ref: '#/components/parameters/group_limit'
      - $ref: '#/components/parameters/group_marker'
      - $ref: '#/components/parameters/group_offset'
      description: Returns a detailed list of group_snapshots.
      operationId: group_snapshots/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group_SnapshotsDetailResponse'
      tags:
      - group_snapshots
      x-openstack:
        min-ver: '3.14'
  /v3/group_snapshots:
    get:
      parameters:
      - $ref: '#/components/parameters/group_all_tenants'
      - $ref: '#/components/parameters/group_sort'
      - $ref: '#/components/parameters/group_sort_key'
      - $ref: '#/components/parameters/group_sort_dir'
      - $ref: '#/components/parameters/group_limit'
      - $ref: '#/components/parameters/group_marker'
      - $ref: '#/components/parameters/group_offset'
      description: Returns a summary list of group_snapshots.
      operationId: group_snapshots:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group_SnapshotsListResponse'
      tags:
      - group_snapshots
      x-openstack:
        min-ver: '3.14'
  /v3/group_snapshots/{id}:
    parameters:
    - $ref: '#/components/parameters/group_snapshots_id'
    get:
      description: Return data about the given group_snapshot.
      operationId: group_snapshots/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group_SnapshotShowResponse'
      tags:
      - group_snapshots
      x-openstack:
        min-ver: '3.14'
  /v3/{project_id}/snapshots/detail:
    parameters:
    - $ref: '#/components/parameters/snapshots_detail_project_id'
    get:
      parameters:
      - $ref: '#/components/parameters/all_tenants'
      - $ref: '#/components/parameters/sort'
      - $ref: '#/components/parameters/sort_key'
      - $ref: '#/components/parameters/sort_dir'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      - $ref: '#/components/parameters/marker'
      - $ref: '#/components/parameters/with_count'
      - $ref: '#/components/parameters/consumes_quota'
      description: 'Lists all Block Storage snapshots, with details, that the project
        can access,

        since v3.31 if non-admin users specify invalid filters in the url, API will

        return bad request.'
      operationId: project_id/snapshots/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotsDetailResponse'
      tags:
      - snapshots
      summary: List snapshots and details
  /v3/{project_id}/snapshots:
    parameters:
    - $ref: '#/components/parameters/snapshots_project_id'
    get:
      parameters:
      - $ref: '#/components/parameters/all_tenants'
      - $ref: '#/components/parameters/sort'
      - $ref: '#/components/parameters/sort_key'
      - $ref: '#/components/parameters/sort_dir'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      - $ref: '#/components/parameters/marker'
      - $ref: '#/components/parameters/with_count'
      - $ref: '#/components/parameters/consumes_quota'
      description: 'Lists all Block Storage snapshots, with summary information,

        that the project can access, since v3.31 if non-admin users

        specify invalid filters in the url, API will return bad request.'
      operationId: project_id/snapshots:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotsListResponse'
      tags:
      - snapshots
      summary: List accessible snapshots
  /v3/{project_id}/snapshots/{id}:
    parameters:
    - $ref: '#/components/parameters/snapshots_project_id'
    - $ref: '#/components/parameters/snapshots_id'
    get:
      description: Return data about the given snapshot.
      operationId: project_id/snapshots/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotShowResponse'
      tags:
      - snapshots
  /v3/snapshots/detail:
    get:
      parameters:
      - $ref: '#/components/parameters/all_tenants'
      - $ref: '#/components/parameters/sort'
      - $ref: '#/components/parameters/sort_key'
      - $ref: '#/components/parameters/sort_dir'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      - $ref: '#/components/parameters/marker'
      - $ref: '#/components/parameters/with_count'
      - $ref: '#/components/parameters/consumes_quota'
      description: Returns a detailed list of snapshots.
      operationId: snapshots/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotsDetailResponse'
      tags:
      - snapshots
  /v3/snapshots:
    get:
      parameters:
      - $ref: '#/components/parameters/all_tenants'
      - $ref: '#/components/parameters/sort'
      - $ref: '#/components/parameters/sort_key'
      - $ref: '#/components/parameters/sort_dir'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      - $ref: '#/components/parameters/marker'
      - $ref: '#/components/parameters/with_count'
      - $ref: '#/components/parameters/consumes_quota'
      description: Returns a summary list of snapshots.
      operationId: snapshots:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotsListResponse'
      tags:
      - snapshots
  /v3/snapshots/{id}:
    parameters:
    - $ref: '#/components/parameters/snapshots_id'
    get:
      description: Return data about the given snapshot.
      operationId: snapshots/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotShowResponse'
      tags:
      - snapshots
  /v3/{project_id}/limits:
    parameters:
    - $ref: '#/components/parameters/limits_project_id'
    get:
      description: 'Shows absolute limits for a project.


        An absolute limit value of `-1` indicates that the absolute limit

        for the item is infinite.'
      operationId: project_id/limits:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitsListResponse'
      tags:
      - limits
      summary: Show absolute limits for project
  /v3/limits:
    get:
      description: Return all global and rate limit information.
      operationId: limits:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitsListResponse'
      tags:
      - limits
  /v3/{project_id}/snapshots/{snapshot_id}/metadata:
    parameters:
    - $ref: '#/components/parameters/snapshots_metadata_project_id'
    - $ref: '#/components/parameters/snapshots_metadata_snapshot_id'
    get:
      description: Shows metadata for a snapshot.
      operationId: project_id/snapshots/snapshot_id/metadata:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotsMetadataListResponse'
      tags:
      - snapshots
      summary: "Show a snapshot\u2019s metadata"
  /v3/{project_id}/snapshots/{snapshot_id}/metadata/{id}:
    parameters:
    - $ref: '#/components/parameters/snapshots_metadata_project_id'
    - $ref: '#/components/parameters/snapshots_metadata_snapshot_id'
    - $ref: '#/components/parameters/snapshots_metadata_id'
    get:
      description: Return a single metadata item.
      operationId: project_id/snapshots/snapshot_id/metadata/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotsMetadataShowResponse'
      tags:
      - snapshots
  /v3/snapshots/{snapshot_id}/metadata:
    parameters:
    - $ref: '#/components/parameters/snapshots_metadata_snapshot_id'
    get:
      description: Returns the list of metadata for a given snapshot.
      operationId: snapshots/snapshot_id/metadata:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotsMetadataListResponse'
      tags:
      - snapshots
  /v3/snapshots/{snapshot_id}/metadata/{id}:
    parameters:
    - $ref: '#/components/parameters/snapshots_metadata_snapshot_id'
    - $ref: '#/components/parameters/snapshots_metadata_id'
    get:
      description: Return a single metadata item.
      operationId: snapshots/snapshot_id/metadata/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotsMetadataShowResponse'
      tags:
      - snapshots
  /v3/{project_id}/volumes/{volume_id}/metadata:
    parameters:
    - $ref: '#/components/parameters/volumes_metadata_project_id'
    - $ref: '#/components/parameters/volumes_metadata_volume_id'
    get:
      description: Shows metadata for a volume.
      operationId: project_id/volumes/volume_id/metadata:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumesMetadataListResponse'
      tags:
      - volumes
      summary: "Show a volume\u2019s metadata"
  /v3/{project_id}/volumes/{volume_id}/metadata/{id}:
    parameters:
    - $ref: '#/components/parameters/volumes_metadata_project_id'
    - $ref: '#/components/parameters/volumes_metadata_volume_id'
    - $ref: '#/components/parameters/volumes_metadata_id'
    get:
      description: Return a single metadata item.
      operationId: project_id/volumes/volume_id/metadata/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumesMetadataShowResponse'
      tags:
      - volumes
  /v3/volumes/{volume_id}/metadata:
    parameters:
    - $ref: '#/components/parameters/volumes_metadata_volume_id'
    get:
      description: Returns the list of metadata for a given volume.
      operationId: volumes/volume_id/metadata:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumesMetadataListResponse'
      tags:
      - volumes
  /v3/volumes/{volume_id}/metadata/{id}:
    parameters:
    - $ref: '#/components/parameters/volumes_metadata_volume_id'
    - $ref: '#/components/parameters/volumes_metadata_id'
    get:
      description: Return a single metadata item.
      operationId: volumes/volume_id/metadata/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumesMetadataShowResponse'
      tags:
      - volumes
  /v3/{project_id}/consistencygroups/detail:
    parameters:
    - $ref: '#/components/parameters/consistencygroups_detail_project_id'
    get:
      description: Lists consistency groups with details.
      operationId: project_id/consistencygroups/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsistencygroupsDetailResponse'
      tags:
      - consistencygroups
      deprecated: true
      summary: List consistency groups and details
  /v3/{project_id}/consistencygroups:
    parameters:
    - $ref: '#/components/parameters/consistencygroups_project_id'
    get:
      description: Lists consistency groups.
      operationId: project_id/consistencygroups:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsistencygroupsListResponse'
      tags:
      - consistencygroups
      deprecated: true
      summary: "List project\u2019s consistency groups"
  /v3/{project_id}/consistencygroups/{id}:
    parameters:
    - $ref: '#/components/parameters/consistencygroups_project_id'
    - $ref: '#/components/parameters/consistencygroups_id'
    get:
      description: Return data about the given consistency group.
      operationId: project_id/consistencygroups/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsistencygroupShowResponse'
      tags:
      - consistencygroups
      deprecated: true
  /v3/consistencygroups/detail:
    get:
      description: Returns a detailed list of consistency groups.
      operationId: consistencygroups/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsistencygroupsDetailResponse'
      tags:
      - consistencygroups
      deprecated: true
  /v3/consistencygroups:
    get:
      description: Returns a summary list of consistency groups.
      operationId: consistencygroups:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsistencygroupsListResponse'
      tags:
      - consistencygroups
      deprecated: true
  /v3/consistencygroups/{id}:
    parameters:
    - $ref: '#/components/parameters/consistencygroups_id'
    get:
      description: Return data about the given consistency group.
      operationId: consistencygroups/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsistencygroupShowResponse'
      tags:
      - consistencygroups
      deprecated: true
  /v3/{project_id}/manageable_volumes/detail:
    parameters:
    - $ref: '#/components/parameters/manageable_volumes_detail_project_id'
    get:
      parameters:
      - $ref: '#/components/parameters/sort'
      - $ref: '#/components/parameters/sort_key'
      - $ref: '#/components/parameters/sort_dir'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      - $ref: '#/components/parameters/marker'
      description: 'Search a volume backend and list detail of volumes which are available
        to

        manage.'
      operationId: project_id/manageable_volumes/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manageable_VolumesDetailResponse'
      tags:
      - manageable_volumes
      summary: List detail of volumes available to manage
  /v3/{project_id}/manageable_volumes:
    parameters:
    - $ref: '#/components/parameters/manageable_volumes_project_id'
    get:
      parameters:
      - $ref: '#/components/parameters/sort'
      - $ref: '#/components/parameters/sort_key'
      - $ref: '#/components/parameters/sort_dir'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      - $ref: '#/components/parameters/marker'
      description: 'Search a volume backend and list summary of volumes which are
        available to

        manage.'
      operationId: project_id/manageable_volumes:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manageable_VolumesListResponse'
      tags:
      - manageable_volumes
      summary: List summary of volumes available to manage
  /v3/manageable_volumes/detail:
    get:
      parameters:
      - $ref: '#/components/parameters/sort'
      - $ref: '#/components/parameters/sort_key'
      - $ref: '#/components/parameters/sort_dir'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      - $ref: '#/components/parameters/marker'
      description: Returns a detailed list of volumes available to manage.
      operationId: manageable_volumes/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manageable_VolumesDetailResponse'
      tags:
      - manageable_volumes
  /v3/manageable_volumes:
    get:
      parameters:
      - $ref: '#/components/parameters/sort'
      - $ref: '#/components/parameters/sort_key'
      - $ref: '#/components/parameters/sort_dir'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      - $ref: '#/components/parameters/marker'
      description: Returns a summary list of volumes available to manage.
      operationId: manageable_volumes:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manageable_VolumesListResponse'
      tags:
      - manageable_volumes
  /v3/{project_id}/manageable_snapshots/detail:
    parameters:
    - $ref: '#/components/parameters/manageable_snapshots_detail_project_id'
    get:
      parameters:
      - $ref: '#/components/parameters/sort'
      - $ref: '#/components/parameters/sort_key'
      - $ref: '#/components/parameters/sort_dir'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      - $ref: '#/components/parameters/marker'
      description: 'Search a volume backend and list detail of snapshots which are
        available to

        manage.'
      operationId: project_id/manageable_snapshots/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manageable_SnapshotsDetailResponse'
      tags:
      - manageable_snapshots
      summary: List detail of snapshots available to manage
  /v3/{project_id}/manageable_snapshots:
    parameters:
    - $ref: '#/components/parameters/manageable_snapshots_project_id'
    get:
      parameters:
      - $ref: '#/components/parameters/sort'
      - $ref: '#/components/parameters/sort_key'
      - $ref: '#/components/parameters/sort_dir'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      - $ref: '#/components/parameters/marker'
      description: 'Search a volume backend and list summary of snapshots which are
        available to

        manage.'
      operationId: project_id/manageable_snapshots:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manageable_SnapshotsListResponse'
      tags:
      - manageable_snapshots
      summary: List summary of snapshots available to manage
  /v3/manageable_snapshots/detail:
    get:
      parameters:
      - $ref: '#/components/parameters/sort'
      - $ref: '#/components/parameters/sort_key'
      - $ref: '#/components/parameters/sort_dir'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      - $ref: '#/components/parameters/marker'
      description: Returns a detailed list of volumes available to manage.
      operationId: manageable_snapshots/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manageable_SnapshotsDetailResponse'
      tags:
      - manageable_snapshots
  /v3/manageable_snapshots:
    get:
      parameters:
      - $ref: '#/components/parameters/sort'
      - $ref: '#/components/parameters/sort_key'
      - $ref: '#/components/parameters/sort_dir'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      - $ref: '#/components/parameters/marker'
      description: Returns a summary list of volumes available to manage.
      operationId: manageable_snapshots:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manageable_SnapshotsListResponse'
      tags:
      - manageable_snapshots
  /v3/{project_id}/backups/detail:
    parameters:
    - $ref: '#/components/parameters/backups_detail_project_id'
    get:
      parameters:
      - $ref: '#/components/parameters/backup_all_tenants'
      - $ref: '#/components/parameters/backup_with_count'
      - $ref: '#/components/parameters/backup_sort'
      - $ref: '#/components/parameters/backup_sort_key'
      - $ref: '#/components/parameters/backup_sort_dir'
      - $ref: '#/components/parameters/backup_limit'
      - $ref: '#/components/parameters/backup_marker'
      - $ref: '#/components/parameters/backup_offset'
      description: 'Lists Block Storage backups, with details, to which the project
        has access,

        since v3.31 if non-admin users specify invalid filters in the url,

        API will return bad request.'
      operationId: project_id/backups/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupsDetailResponse'
      tags:
      - backups
      summary: List backups with detail
  /v3/{project_id}/backups:
    parameters:
    - $ref: '#/components/parameters/backups_project_id'
    get:
      parameters:
      - $ref: '#/components/parameters/backup_all_tenants'
      - $ref: '#/components/parameters/backup_with_count'
      - $ref: '#/components/parameters/backup_sort'
      - $ref: '#/components/parameters/backup_sort_key'
      - $ref: '#/components/parameters/backup_sort_dir'
      - $ref: '#/components/parameters/backup_limit'
      - $ref: '#/components/parameters/backup_marker'
      - $ref: '#/components/parameters/backup_offset'
      description: 'Lists Block Storage backups to which the project has access,

        since v3.31 if non-admin users specify invalid filters in the

        url, API will return bad request.'
      operationId: project_id/backups:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupsListResponse'
      tags:
      - backups
      summary: List backups for project
  /v3/{project_id}/backups/{id}:
    parameters:
    - $ref: '#/components/parameters/backups_project_id'
    - $ref: '#/components/parameters/backups_id'
    get:
      description: Return data about the given backup.
      operationId: project_id/backups/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupShowResponse'
      tags:
      - backups
  /v3/backups/detail:
    get:
      parameters:
      - $ref: '#/components/parameters/backup_all_tenants'
      - $ref: '#/components/parameters/backup_with_count'
      - $ref: '#/components/parameters/backup_sort'
      - $ref: '#/components/parameters/backup_sort_key'
      - $ref: '#/components/parameters/backup_sort_dir'
      - $ref: '#/components/parameters/backup_limit'
      - $ref: '#/components/parameters/backup_marker'
      - $ref: '#/components/parameters/backup_offset'
      description: Returns a detailed list of backups.
      operationId: backups/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupsDetailResponse'
      tags:
      - backups
  /v3/backups:
    get:
      parameters:
      - $ref: '#/components/parameters/backup_all_tenants'
      - $ref: '#/components/parameters/backup_with_count'
      - $ref: '#/components/parameters/backup_sort'
      - $ref: '#/components/parameters/backup_sort_key'
      - $ref: '#/components/parameters/backup_sort_dir'
      - $ref: '#/components/parameters/backup_limit'
      - $ref: '#/components/parameters/backup_marker'
      - $ref: '#/components/parameters/backup_offset'
      description: Returns a summary list of backups.
      operationId: backups:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupsListResponse'
      tags:
      - backups
  /v3/backups/{id}:
    parameters:
    - $ref: '#/components/parameters/backups_id'
    get:
      description: Return data about the given backup.
      operationId: backups/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupShowResponse'
      tags:
      - backups
  /v3/{project_id}/attachments/detail:
    parameters:
    - $ref: '#/components/parameters/attachments_detail_project_id'
    get:
      parameters:
      - $ref: '#/components/parameters/all_tenants'
      - $ref: '#/components/parameters/sort'
      - $ref: '#/components/parameters/sort_key'
      - $ref: '#/components/parameters/sort_dir'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      - $ref: '#/components/parameters/marker'
      description: 'Lists all attachments with details. Since v3.31 if non-admin

        users specify invalid filters in the url, API will return bad request.


        Available starting in the 3.27 microversion.'
      operationId: project_id/attachments/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentsDetailResponse'
      tags:
      - attachments
      x-openstack:
        min-ver: '3.27'
      summary: List attachments with details
  /v3/{project_id}/attachments:
    parameters:
    - $ref: '#/components/parameters/attachments_project_id'
    get:
      parameters:
      - $ref: '#/components/parameters/all_tenants'
      - $ref: '#/components/parameters/sort'
      - $ref: '#/components/parameters/sort_key'
      - $ref: '#/components/parameters/sort_dir'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      - $ref: '#/components/parameters/marker'
      description: 'Lists all attachments, since v3.31 if non-admin users

        specify invalid filters in the url, API will return bad request.


        Available starting in the 3.27 microversion.'
      operationId: project_id/attachments:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentsListResponse'
      tags:
      - attachments
      x-openstack:
        min-ver: '3.27'
      summary: List attachments
  /v3/{project_id}/attachments/{id}:
    parameters:
    - $ref: '#/components/parameters/attachments_project_id'
    - $ref: '#/components/parameters/attachments_id'
    get:
      description: Return data about the given attachment.
      operationId: project_id/attachments/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentShowResponse'
      tags:
      - attachments
      x-openstack:
        min-ver: '3.27'
  /v3/attachments/detail:
    get:
      parameters:
      - $ref: '#/components/parameters/all_tenants'
      - $ref: '#/components/parameters/sort'
      - $ref: '#/components/parameters/sort_key'
      - $ref: '#/components/parameters/sort_dir'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      - $ref: '#/components/parameters/marker'
      description: Return a detailed list of attachments.
      operationId: attachments/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentsDetailResponse'
      tags:
      - attachments
      x-openstack:
        min-ver: '3.27'
  /v3/attachments:
    get:
      parameters:
      - $ref: '#/components/parameters/all_tenants'
      - $ref: '#/components/parameters/sort'
      - $ref: '#/components/parameters/sort_key'
      - $ref: '#/components/parameters/sort_dir'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      - $ref: '#/components/parameters/marker'
      description: Return a summary list of attachments.
      operationId: attachments:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentsListResponse'
      tags:
      - attachments
      x-openstack:
        min-ver: '3.27'
  /v3/attachments/{id}:
    parameters:
    - $ref: '#/components/parameters/attachments_id'
    get:
      description: Return data about the given attachment.
      operationId: attachments/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentShowResponse'
      tags:
      - attachments
      x-openstack:
        min-ver: '3.27'
  /v3/{project_id}/resource_filters:
    parameters:
    - $ref: '#/components/parameters/resource_filters_project_id'
    get:
      description: List filters.
      operationId: project_id/resource_filters:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource_FiltersListResponse'
      tags:
      - resource_filters
      x-openstack:
        min-ver: '3.33'
      summary: List resource filters
  /v3/resource_filters:
    get:
      description: Return a list of resource filters.
      operationId: resource_filters:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource_FiltersListResponse'
      tags:
      - resource_filters
      x-openstack:
        min-ver: '3.33'
  /v3/{project_id}/volume-transfers/detail:
    parameters:
    - $ref: '#/components/parameters/volume_transfers_detail_project_id'
    get:
      parameters:
      - $ref: '#/components/parameters/transfer_is_public'
      - $ref: '#/components/parameters/transfer_all_tenants'
      - $ref: '#/components/parameters/transfer_sort'
      - $ref: '#/components/parameters/transfer_sort_key'
      - $ref: '#/components/parameters/transfer_sort_dir'
      - $ref: '#/components/parameters/transfer_limit'
      - $ref: '#/components/parameters/transfer_marker'
      - $ref: '#/components/parameters/transfer_offset'
      description: Lists volume transfers, with details.
      operationId: project_id/volume-transfers/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume_TransfersDetailResponse'
      tags:
      - volume-transfers
      x-openstack:
        min-ver: '3.55'
      summary: List volume transfers and details
  /v3/{project_id}/volume-transfers:
    parameters:
    - $ref: '#/components/parameters/volume_transfers_project_id'
    get:
      description: Lists volume transfers.
      operationId: project_id/volume-transfers:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume_TransfersListResponse'
      tags:
      - volume-transfers
      x-openstack:
        min-ver: '3.55'
      summary: List volume transfers for a project
  /v3/{project_id}/volume-transfers/{id}:
    parameters:
    - $ref: '#/components/parameters/volume_transfers_project_id'
    - $ref: '#/components/parameters/volume_transfers_id'
    get:
      description: Return data about active transfers.
      operationId: project_id/volume-transfers/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume_TransferShowResponse'
      tags:
      - volume-transfers
      x-openstack:
        min-ver: '3.55'
  /v3/volume-transfers/detail:
    get:
      parameters:
      - $ref: '#/components/parameters/transfer_is_public'
      - $ref: '#/components/parameters/transfer_all_tenants'
      - $ref: '#/components/parameters/transfer_sort'
      - $ref: '#/components/parameters/transfer_sort_key'
      - $ref: '#/components/parameters/transfer_sort_dir'
      - $ref: '#/components/parameters/transfer_limit'
      - $ref: '#/components/parameters/transfer_marker'
      - $ref: '#/components/parameters/transfer_offset'
      description: Returns a detailed list of transfers.
      operationId: volume-transfers/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume_TransfersDetailResponse'
      tags:
      - volume-transfers
      x-openstack:
        min-ver: '3.55'
  /v3/volume-transfers:
    get:
      description: Returns a summary list of transfers.
      operationId: volume-transfers:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume_TransfersListResponse'
      tags:
      - volume-transfers
      x-openstack:
        min-ver: '3.55'
  /v3/volume-transfers/{id}:
    parameters:
    - $ref: '#/components/parameters/volume_transfers_id'
    get:
      description: Return data about active transfers.
      operationId: volume-transfers/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume_TransferShowResponse'
      tags:
      - volume-transfers
      x-openstack:
        min-ver: '3.55'
  /v3/{project_id}/default-types/{id}:
    parameters:
    - $ref: '#/components/parameters/default_types_project_id'
    - $ref: '#/components/parameters/default_types_id'
    get:
      description: Return detail of a default type.
      operationId: project_id/default-types/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Default_TypeDetailResponse'
      tags:
      - default-types
      x-openstack:
        min-ver: '3.62'
  /v3/{project_id}/default-types:
    parameters:
    - $ref: '#/components/parameters/default_types_project_id'
    get:
      description: Return a list of default types.
      operationId: project_id/default-types:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Default_TypesListResponse'
      tags:
      - default-types
      x-openstack:
        min-ver: '3.62'
  /v3/default-types/{id}:
    parameters:
    - $ref: '#/components/parameters/default_types_id'
    get:
      description: Return detail of a default type.
      operationId: default-types/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Default_TypeDetailResponse'
      tags:
      - default-types
      x-openstack:
        min-ver: '3.62'
  /v3/default-types:
    get:
      description: Return a list of default types.
      operationId: default-types:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Default_TypesListResponse'
      tags:
      - default-types
      x-openstack:
        min-ver: '3.62'
  /v3/{project_id}/extensions:
    parameters:
    - $ref: '#/components/parameters/extensions_project_id'
    get:
      description: Lists Block Storage API extensions.
      operationId: project_id/extensions:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtensionsListResponse'
      tags:
      - extensions
      summary: List Known API extensions
  /v3/extensions:
    get:
      operationId: extensions:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtensionsListResponse'
      tags:
      - extensions
  /v3/{project_id}/os-availability-zone:
    parameters:
    - $ref: '#/components/parameters/os_availability_zone_project_id'
    get:
      description: List availability zone information.
      operationId: project_id/os-availability-zone:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Availability_ZoneListResponse'
      tags:
      - os-availability-zone
      summary: List Availability Zone Information
  /v3/os-availability-zone:
    get:
      description: Describe all known availability zones.
      operationId: os-availability-zone:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Availability_ZoneListResponse'
      tags:
      - os-availability-zone
  /v3/{project_id}/backups/{id}/export_record:
    parameters:
    - $ref: '#/components/parameters/backups_export_record_project_id'
    - $ref: '#/components/parameters/backups_export_record_id'
    get:
      description: Export a backup.
      operationId: project_id/backups/id/export_record:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupsExport_RecordResponse'
      tags:
      - backups
  /v3/backups/{id}/export_record:
    parameters:
    - $ref: '#/components/parameters/backups_export_record_id'
    get:
      description: Export a backup.
      operationId: backups/id/export_record:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupsExport_RecordResponse'
      tags:
      - backups
  /v3/{project_id}/capabilities/{id}:
    parameters:
    - $ref: '#/components/parameters/capabilities_project_id'
    - $ref: '#/components/parameters/capabilities_id'
    get:
      description: Return capabilities list of given backend.
      operationId: project_id/capabilities/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapabilityShowResponse'
      tags:
      - capabilities
  /v3/capabilities/{id}:
    parameters:
    - $ref: '#/components/parameters/capabilities_id'
    get:
      description: Return capabilities list of given backend.
      operationId: capabilities/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapabilityShowResponse'
      tags:
      - capabilities
  /v3/{project_id}/cgsnapshots/detail:
    parameters:
    - $ref: '#/components/parameters/cgsnapshots_detail_project_id'
    get:
      description: Lists all consistency group snapshots with details.
      operationId: project_id/cgsnapshots/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CgsnapshotsDetailResponse'
      tags:
      - cgsnapshots
      deprecated: true
      summary: List all consistency group snapshots with details
  /v3/{project_id}/cgsnapshots:
    parameters:
    - $ref: '#/components/parameters/cgsnapshots_project_id'
    get:
      description: Lists all consistency group snapshots.
      operationId: project_id/cgsnapshots:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CgsnapshotsListResponse'
      tags:
      - cgsnapshots
      deprecated: true
      summary: List all consistency group snapshots
  /v3/{project_id}/cgsnapshots/{id}:
    parameters:
    - $ref: '#/components/parameters/cgsnapshots_project_id'
    - $ref: '#/components/parameters/cgsnapshots_id'
    get:
      description: Return data about the given cgsnapshot.
      operationId: project_id/cgsnapshots/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CgsnapshotShowResponse'
      tags:
      - cgsnapshots
      deprecated: true
  /v3/cgsnapshots/detail:
    get:
      description: Returns a detailed list of cgsnapshots.
      operationId: cgsnapshots/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CgsnapshotsDetailResponse'
      tags:
      - cgsnapshots
      deprecated: true
  /v3/cgsnapshots:
    get:
      description: Returns a summary list of cgsnapshots.
      operationId: cgsnapshots:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CgsnapshotsListResponse'
      tags:
      - cgsnapshots
      deprecated: true
  /v3/cgsnapshots/{id}:
    parameters:
    - $ref: '#/components/parameters/cgsnapshots_id'
    get:
      description: Return data about the given cgsnapshot.
      operationId: cgsnapshots/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CgsnapshotShowResponse'
      tags:
      - cgsnapshots
      deprecated: true
  /v3/{project_id}/os-hosts:
    parameters:
    - $ref: '#/components/parameters/os_hosts_project_id'
    get:
      operationId: project_id/os-hosts:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_HostsListResponse'
      tags:
      - os-hosts
  /v3/{project_id}/os-hosts/{id}:
    parameters:
    - $ref: '#/components/parameters/os_hosts_project_id'
    - $ref: '#/components/parameters/os_hosts_id'
    get:
      description: 'Shows the volume usage info given by hosts.


        |  |  |

        | --- | --- |

        | param req: | security context |

        | param id: | hostname |

        | returns: | dict -- the host resources dictionary. ex.:   ```  {''host'':
        [{''resource'': D},..]} D: {''host'': ''hostname'',''project'': ''admin'',     ''volume_count'':
        1, ''total_volume_gb'': 2048}  ``` |'
      operationId: project_id/os-hosts/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_HostShowResponse'
      tags:
      - os-hosts
  /v3/os-hosts:
    get:
      operationId: os-hosts:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_HostsListResponse'
      tags:
      - os-hosts
  /v3/os-hosts/{id}:
    parameters:
    - $ref: '#/components/parameters/os_hosts_id'
    get:
      description: 'Shows the volume usage info given by hosts.


        |  |  |

        | --- | --- |

        | param req: | security context |

        | param id: | hostname |

        | returns: | dict -- the host resources dictionary. ex.:   ```  {''host'':
        [{''resource'': D},..]} D: {''host'': ''hostname'',''project'': ''admin'',     ''volume_count'':
        1, ''total_volume_gb'': 2048}  ``` |'
      operationId: os-hosts/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_HostShowResponse'
      tags:
      - os-hosts
  /v3/{project_id}/qos-specs:
    parameters:
    - $ref: '#/components/parameters/qos_specs_project_id'
    get:
      parameters:
      - $ref: '#/components/parameters/qos_spec_sort'
      - $ref: '#/components/parameters/qos_spec_sort_key'
      - $ref: '#/components/parameters/qos_spec_sort_dir'
      - $ref: '#/components/parameters/qos_spec_limit'
      - $ref: '#/components/parameters/qos_spec_marker'
      - $ref: '#/components/parameters/qos_spec_offset'
      description: Lists quality of service (QoS) specifications.
      operationId: project_id/qos-specs:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Qos_SpecsListResponse'
      tags:
      - qos-specs
      summary: List QoS Specifications
  /v3/{project_id}/qos-specs/{id}/associations:
    parameters:
    - $ref: '#/components/parameters/qos_specs_associations_project_id'
    - $ref: '#/components/parameters/qos_specs_associations_id'
    get:
      description: List all associations of given qos specs.
      operationId: project_id/qos-specs/id/associations:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Qos_SpecsAssociationsResponse'
      tags:
      - qos-specs
  /v3/{project_id}/qos-specs/{id}/associate:
    parameters:
    - $ref: '#/components/parameters/qos_specs_associate_project_id'
    - $ref: '#/components/parameters/qos_specs_associate_id'
    get:
      description: Associate a qos specs with a volume type.
      operationId: project_id/qos-specs/id/associate:get
      responses:
        '202':
          description: Accepted
      tags:
      - qos-specs
  /v3/{project_id}/qos-specs/{id}/disassociate:
    parameters:
    - $ref: '#/components/parameters/qos_specs_disassociate_project_id'
    - $ref: '#/components/parameters/qos_specs_disassociate_id'
    get:
      description: Disassociate a qos specs from a volume type.
      operationId: project_id/qos-specs/id/disassociate:get
      responses:
        '202':
          description: Accepted
      tags:
      - qos-specs
  /v3/{project_id}/qos-specs/{id}/disassociate_all:
    parameters:
    - $ref: '#/components/parameters/qos_specs_disassociate_all_project_id'
    - $ref: '#/components/parameters/qos_specs_disassociate_all_id'
    get:
      description: Disassociate a qos specs from all volume types.
      operationId: project_id/qos-specs/id/disassociate_all:get
      responses:
        '202':
          description: Accepted
      tags:
      - qos-specs
  /v3/{project_id}/qos-specs/{id}:
    parameters:
    - $ref: '#/components/parameters/qos_specs_project_id'
    - $ref: '#/components/parameters/qos_specs_id'
    get:
      description: Return a single qos spec item.
      operationId: project_id/qos-specs/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Qos_SpecShowResponse'
      tags:
      - qos-specs
  /v3/qos-specs:
    get:
      parameters:
      - $ref: '#/components/parameters/qos_spec_sort'
      - $ref: '#/components/parameters/qos_spec_sort_key'
      - $ref: '#/components/parameters/qos_spec_sort_dir'
      - $ref: '#/components/parameters/qos_spec_limit'
      - $ref: '#/components/parameters/qos_spec_marker'
      - $ref: '#/components/parameters/qos_spec_offset'
      description: Returns the list of qos_specs.
      operationId: qos-specs:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Qos_SpecsListResponse'
      tags:
      - qos-specs
  /v3/qos-specs/{id}/associations:
    parameters:
    - $ref: '#/components/parameters/qos_specs_associations_id'
    get:
      description: List all associations of given qos specs.
      operationId: qos-specs/id/associations:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Qos_SpecsAssociationsResponse'
      tags:
      - qos-specs
  /v3/qos-specs/{id}/associate:
    parameters:
    - $ref: '#/components/parameters/qos_specs_associate_id'
    get:
      description: Associate a qos specs with a volume type.
      operationId: qos-specs/id/associate:get
      responses:
        '202':
          description: Accepted
      tags:
      - qos-specs
  /v3/qos-specs/{id}/disassociate:
    parameters:
    - $ref: '#/components/parameters/qos_specs_disassociate_id'
    get:
      description: Disassociate a qos specs from a volume type.
      operationId: qos-specs/id/disassociate:get
      responses:
        '202':
          description: Accepted
      tags:
      - qos-specs
  /v3/qos-specs/{id}/disassociate_all:
    parameters:
    - $ref: '#/components/parameters/qos_specs_disassociate_all_id'
    get:
      description: Disassociate a qos specs from all volume types.
      operationId: qos-specs/id/disassociate_all:get
      responses:
        '202':
          description: Accepted
      tags:
      - qos-specs
  /v3/qos-specs/{id}:
    parameters:
    - $ref: '#/components/parameters/qos_specs_id'
    get:
      description: Return a single qos spec item.
      operationId: qos-specs/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Qos_SpecShowResponse'
      tags:
      - qos-specs
  /v3/{project_id}/os-quota-class-sets/{id}:
    parameters:
    - $ref: '#/components/parameters/os_quota_class_sets_project_id'
    - $ref: '#/components/parameters/os_quota_class_sets_id'
    get:
      operationId: project_id/os-quota-class-sets/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Quota_Class_SetShowResponse'
      tags:
      - os-quota-class-sets
  /v3/os-quota-class-sets/{id}:
    parameters:
    - $ref: '#/components/parameters/os_quota_class_sets_id'
    get:
      operationId: os-quota-class-sets/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Quota_Class_SetShowResponse'
      tags:
      - os-quota-class-sets
  /v3/{project_id}/os-quota-sets/{id}/defaults:
    parameters:
    - $ref: '#/components/parameters/os_quota_sets_defaults_project_id'
    - $ref: '#/components/parameters/os_quota_sets_defaults_id'
    get:
      operationId: project_id/os-quota-sets/id/defaults:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Quota_SetsDefaultsResponse'
      tags:
      - os-quota-sets
  /v3/{project_id}/os-quota-sets/{id}:
    parameters:
    - $ref: '#/components/parameters/os_quota_sets_project_id'
    - $ref: '#/components/parameters/os_quota_sets_id'
    get:
      description: 'Show quota for a particular tenant


        |  |  |

        | --- | --- |

        | param req: | request |

        | param id: | target project id that needs to be shown |'
      operationId: project_id/os-quota-sets/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Quota_SetShowResponse'
      tags:
      - os-quota-sets
  /v3/os-quota-sets/{id}/defaults:
    parameters:
    - $ref: '#/components/parameters/os_quota_sets_defaults_id'
    get:
      operationId: os-quota-sets/id/defaults:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Quota_SetsDefaultsResponse'
      tags:
      - os-quota-sets
  /v3/os-quota-sets/{id}:
    parameters:
    - $ref: '#/components/parameters/os_quota_sets_id'
    get:
      description: 'Show quota for a particular tenant


        |  |  |

        | --- | --- |

        | param req: | request |

        | param id: | target project id that needs to be shown |'
      operationId: os-quota-sets/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Quota_SetShowResponse'
      tags:
      - os-quota-sets
  /v3/{project_id}/scheduler-stats/get_pools:
    parameters:
    - $ref: '#/components/parameters/scheduler_stats_get_pools_project_id'
    get:
      description: 'Lists all back-end storage pools. Since v3.31 if non-admin users

        specify invalid filters in the url, API will return bad request.'
      operationId: project_id/scheduler-stats/get_pools:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scheduler_StatsGet_PoolsResponse'
      tags:
      - scheduler-stats
      summary: List all back-end storage pools
  /v3/scheduler-stats/get_pools:
    get:
      description: List all active pools in scheduler.
      operationId: scheduler-stats/get_pools:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scheduler_StatsGet_PoolsResponse'
      tags:
      - scheduler-stats
  /v3/{project_id}/os-services:
    parameters:
    - $ref: '#/components/parameters/os_services_project_id'
    get:
      description: 'Lists all Cinder services. Provides details why any services

        were disabled.'
      operationId: project_id/os-services:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_ServicesListResponse'
      tags:
      - os-services
      summary: List All Cinder Services
  /v3/os-services:
    get:
      description: 'Return a list of all running services.


        Filter by host & service name.'
      operationId: os-services:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_ServicesListResponse'
      tags:
      - os-services
  /v3/{project_id}/os-snapshot-manage/detail:
    parameters:
    - $ref: '#/components/parameters/os_snapshot_manage_detail_project_id'
    get:
      description: Returns a detailed list of snapshots available to manage.
      operationId: project_id/os-snapshot-manage/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Snapshot_ManageDetailResponse'
      tags:
      - os-snapshot-manage
  /v3/{project_id}/os-snapshot-manage:
    parameters:
    - $ref: '#/components/parameters/os_snapshot_manage_project_id'
    get:
      description: Returns a summary list of snapshots available to manage.
      operationId: project_id/os-snapshot-manage:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Snapshot_ManageListResponse'
      tags:
      - os-snapshot-manage
  /v3/os-snapshot-manage/detail:
    get:
      description: Returns a detailed list of snapshots available to manage.
      operationId: os-snapshot-manage/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Snapshot_ManageDetailResponse'
      tags:
      - os-snapshot-manage
  /v3/os-snapshot-manage:
    get:
      description: Returns a summary list of snapshots available to manage.
      operationId: os-snapshot-manage:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Snapshot_ManageListResponse'
      tags:
      - os-snapshot-manage
  /v3/{project_id}/types/{type_id}/extra_specs:
    parameters:
    - $ref: '#/components/parameters/types_extra_specs_project_id'
    - $ref: '#/components/parameters/types_extra_specs_type_id'
    get:
      description: Returns the list of extra specs for a given volume type.
      operationId: project_id/types/type_id/extra_specs:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypesExtra_SpecsListResponse'
      tags:
      - types
  /v3/{project_id}/types/{type_id}/extra_specs/{id}:
    parameters:
    - $ref: '#/components/parameters/types_extra_specs_project_id'
    - $ref: '#/components/parameters/types_extra_specs_type_id'
    - $ref: '#/components/parameters/types_extra_specs_id'
    get:
      description: Return a single extra spec item.
      operationId: project_id/types/type_id/extra_specs/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypesExtra_SpecShowResponse'
      tags:
      - types
  /v3/types/{type_id}/extra_specs:
    parameters:
    - $ref: '#/components/parameters/types_extra_specs_type_id'
    get:
      description: Returns the list of extra specs for a given volume type.
      operationId: types/type_id/extra_specs:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypesExtra_SpecsListResponse'
      tags:
      - types
  /v3/types/{type_id}/extra_specs/{id}:
    parameters:
    - $ref: '#/components/parameters/types_extra_specs_type_id'
    - $ref: '#/components/parameters/types_extra_specs_id'
    get:
      description: Return a single extra spec item.
      operationId: types/type_id/extra_specs/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypesExtra_SpecShowResponse'
      tags:
      - types
  /v3/{project_id}/volumes/{volume_id}/encryption:
    parameters:
    - $ref: '#/components/parameters/volumes_encryption_project_id'
    - $ref: '#/components/parameters/volumes_encryption_volume_id'
    get:
      description: Returns the encryption metadata for a given volume.
      operationId: project_id/volumes/volume_id/encryption:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumesEncryptionListResponse'
      tags:
      - volumes
  /v3/{project_id}/volumes/{volume_id}/encryption/{id}:
    parameters:
    - $ref: '#/components/parameters/volumes_encryption_project_id'
    - $ref: '#/components/parameters/volumes_encryption_volume_id'
    - $ref: '#/components/parameters/volumes_encryption_id'
    get:
      description: Return a single encryption item.
      operationId: project_id/volumes/volume_id/encryption/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumesEncryptionShowResponse'
      tags:
      - volumes
  /v3/volumes/{volume_id}/encryption:
    parameters:
    - $ref: '#/components/parameters/volumes_encryption_volume_id'
    get:
      description: Returns the encryption metadata for a given volume.
      operationId: volumes/volume_id/encryption:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumesEncryptionListResponse'
      tags:
      - volumes
  /v3/volumes/{volume_id}/encryption/{id}:
    parameters:
    - $ref: '#/components/parameters/volumes_encryption_volume_id'
    - $ref: '#/components/parameters/volumes_encryption_id'
    get:
      description: Return a single encryption item.
      operationId: volumes/volume_id/encryption/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumesEncryptionShowResponse'
      tags:
      - volumes
  /v3/{project_id}/os-volume-manage/detail:
    parameters:
    - $ref: '#/components/parameters/os_volume_manage_detail_project_id'
    get:
      description: Returns a detailed list of volumes available to manage.
      operationId: project_id/os-volume-manage/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Volume_ManageDetailResponse'
      tags:
      - os-volume-manage
  /v3/{project_id}/os-volume-manage:
    parameters:
    - $ref: '#/components/parameters/os_volume_manage_project_id'
    get:
      description: Returns a summary list of volumes available to manage.
      operationId: project_id/os-volume-manage:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Volume_ManageListResponse'
      tags:
      - os-volume-manage
  /v3/os-volume-manage/detail:
    get:
      description: Returns a detailed list of volumes available to manage.
      operationId: os-volume-manage/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Volume_ManageDetailResponse'
      tags:
      - os-volume-manage
  /v3/os-volume-manage:
    get:
      description: Returns a summary list of volumes available to manage.
      operationId: os-volume-manage:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Volume_ManageListResponse'
      tags:
      - os-volume-manage
  /v3/{project_id}/os-volume-transfer/detail:
    parameters:
    - $ref: '#/components/parameters/os_volume_transfer_detail_project_id'
    get:
      description: Lists volume transfers, with details.
      operationId: project_id/os-volume-transfer/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Volume_TransferDetailResponse'
      tags:
      - os-volume-transfer
      summary: List volume transfers and details
  /v3/{project_id}/os-volume-transfer:
    parameters:
    - $ref: '#/components/parameters/os_volume_transfer_project_id'
    get:
      description: Lists volume transfers.
      operationId: project_id/os-volume-transfer:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Volume_TransferListResponse'
      tags:
      - os-volume-transfer
      summary: List volume transfers for a project
  /v3/{project_id}/os-volume-transfer/{id}:
    parameters:
    - $ref: '#/components/parameters/os_volume_transfer_project_id'
    - $ref: '#/components/parameters/os_volume_transfer_id'
    get:
      description: Return data about active transfers.
      operationId: project_id/os-volume-transfer/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Volume_TransferShowResponse'
      tags:
      - os-volume-transfer
  /v3/os-volume-transfer/detail:
    get:
      description: Returns a detailed list of transfers.
      operationId: os-volume-transfer/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Volume_TransferDetailResponse'
      tags:
      - os-volume-transfer
  /v3/os-volume-transfer:
    get:
      description: Returns a summary list of transfers.
      operationId: os-volume-transfer:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Volume_TransferListResponse'
      tags:
      - os-volume-transfer
  /v3/os-volume-transfer/{id}:
    parameters:
    - $ref: '#/components/parameters/os_volume_transfer_id'
    get:
      description: Return data about active transfers.
      operationId: os-volume-transfer/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Volume_TransferShowResponse'
      tags:
      - os-volume-transfer
  /v3/{project_id}/types/{type_id}/os-volume-type-access:
    parameters:
    - $ref: '#/components/parameters/types_os_volume_type_access_project_id'
    - $ref: '#/components/parameters/types_os_volume_type_access_type_id'
    get:
      operationId: project_id/types/type_id/os-volume-type-access:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypesOs_Volume_Type_AccessListResponse'
      tags:
      - types
  /v3/types/{type_id}/os-volume-type-access:
    parameters:
    - $ref: '#/components/parameters/types_os_volume_type_access_type_id'
    get:
      operationId: types/type_id/os-volume-type-access:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypesOs_Volume_Type_AccessListResponse'
      tags:
      - types
  /v3/{project_id}/types/{type_id}/encryption:
    parameters:
    - $ref: '#/components/parameters/types_encryption_project_id'
    - $ref: '#/components/parameters/types_encryption_type_id'
    get:
      description: Returns the encryption specs for a given volume type.
      operationId: project_id/types/type_id/encryption:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypesEncryptionListResponse'
      tags:
      - types
  /v3/{project_id}/types/{type_id}/encryption/{id}:
    parameters:
    - $ref: '#/components/parameters/types_encryption_project_id'
    - $ref: '#/components/parameters/types_encryption_type_id'
    - $ref: '#/components/parameters/types_encryption_id'
    get:
      description: Return a single encryption item.
      operationId: project_id/types/type_id/encryption/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypesEncryptionShowResponse'
      tags:
      - types
  /v3/types/{type_id}/encryption:
    parameters:
    - $ref: '#/components/parameters/types_encryption_type_id'
    get:
      description: Returns the encryption specs for a given volume type.
      operationId: types/type_id/encryption:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypesEncryptionListResponse'
      tags:
      - types
  /v3/types/{type_id}/encryption/{id}:
    parameters:
    - $ref: '#/components/parameters/types_encryption_type_id'
    - $ref: '#/components/parameters/types_encryption_id'
    get:
      description: Return a single encryption item.
      operationId: types/type_id/encryption/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypesEncryptionShowResponse'
      tags:
      - types
components:
  schemas:
    RootListResponse:
      type: object
      description: Response of the :get operation
    VolumesDetailResponse:
      type: object
      description: A container with list of volume objects.
      properties:
        volumes:
          type: array
          items:
            type: object
            description: A volume object.
            properties:
              name:
                type:
                - string
                - 'null'
                description: The volume name.
              description:
                type:
                - string
                - 'null'
                description: The volume description.
              volume_type:
                type: string
                description: The associated volume type name for the volume.
              metadata:
                type: object
                patternProperties:
                  ^[a-zA-Z0-9-_:. /]{1,255}$:
                    type: string
                    maxLength: 255
                additionalProperties: false
                description: 'A `metadata` object. Contains one or more

                  metadata key and value pairs that are associated with the volume.'
              snapshot_id:
                type: string
                format: uuid
                description: 'To create a volume from an existing snapshot,

                  specify the UUID of the volume snapshot. The volume is created in

                  same availability zone and with same size as the snapshot.'
              source_volid:
                type: string
                format: uuid
                description: 'The UUID of the source volume. The API creates a new
                  volume with the same

                  size as the source volume unless a larger size is requested.'
              consistencygroup_id:
                type: string
                format: uuid
                description: The UUID of the consistency group.
              size:
                type: integer
                format: int64
                description: The size of the volume, in gibibytes (GiB).
              availability_zone:
                type: string
                description: The name of the availability zone.
              bootable:
                type: string
                description: 'Enables or disables the bootable attribute. You

                  can boot an instance from a bootable volume.'
              multiattach:
                type: boolean
                description: 'If true, this volume can attach to more than one

                  instance.'
              status:
                type: string
                description: The volume status.
              migration_status:
                type: string
                description: The volume migration status. Admin only.
              attachments:
                description: "Instance attachment information. If this volume\nis\
                  \ attached to a server instance, the attachments list includes\n\
                  the UUID of the attached server, an attachment UUID, the name of\n\
                  the attached host, if any, the volume UUID, the device, and the\n\
                  device UUID. Otherwise, this list is empty. For example:\n\n```\n\
                  [\n  {\n    'server_id': '6c8cf6e0-4c8f-442f-9196-9679737feec6',\n\
                  \    'attachment_id': '3dafcac4-1cb9-4b60-a227-d729baa10cf6',\n\
                  \    'attached_at': '2019-09-30T19:30:34.000000',\n    'host_name':\
                  \ null,\n    'volume_id': '5d95d5ee-4bdd-4452-b9d7-d44ca10d3d53',\n\
                  \    'device': '/dev/vda',\n    'id': '5d95d5ee-4bdd-4452-b9d7-d44ca10d3d53'\n\
                  \  }\n]\n\n```"
                type: array
                items:
                  type: object
                  properties:
                    server_id:
                      type:
                      - string
                      - 'null'
                      format: uuid
                    attachment_id:
                      type: string
                      format: uuid
                    attached_at:
                      type: string
                      format: date-time
                    host_name:
                      type:
                      - string
                      - 'null'
                    volume_id:
                      type: string
                      format: uuid
                    device:
                      type:
                      - string
                      - 'null'
                    id:
                      type: string
                      format: uuid
                      description: The UUID of the volume.
                  additionalProperties: false
                  required:
                  - server_id
                  - attachment_id
                  - host_name
                  - volume_id
                  - device
                  - id
              links:
                description: The volume links.
                type: array
                items:
                  type: object
                  description: Links to the resources in question. See [API Guide
                    / Links and References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
                    for more info.
                  properties:
                    href:
                      type: string
                      format: uri
                    rel:
                      type: string
              encrypted:
                type: boolean
                description: If true, this volume is encrypted.
              created_at:
                type: string
                format: date-time
                description: "The date and time when the resource was created.\n\n\
                  The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):\n\
                  \n```\nCCYY-MM-DDThh:mm:ss\xB1hh:mm\n\n```\n\nFor example, `2015-08-27T09:49:58-05:00`.\n\
                  \nThe `\xB1hh:mm` value, if included, is the time zone as an offset\n\
                  from UTC."
              updated_at:
                type: string
                format: date-time
                description: "The date and time when the resource was updated.\n\n\
                  The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):\n\
                  \n```\nCCYY-MM-DDThh:mm:ss\xB1hh:mm\n\n```\n\nFor example, `2015-08-27T09:49:58-05:00`.\n\
                  \nThe `\xB1hh:mm` value, if included, is the time zone as an offset\n\
                  from UTC. In the previous example, the offset value is `-05:00`.\n\
                  \nIf the `updated_at` date and time stamp is not set, its value\
                  \ is\n`null`."
              replication_status:
                type:
                - string
                - 'null'
                description: The volume replication status.
              id:
                type: string
                format: uuid
                description: The UUID of the volume.
              user_id:
                type: string
                format: uuid
                description: The UUID of the user.
              volume_type_id:
                type: string
                format: uuid
                description: 'The associated volume type ID for the volume.


                  **New in version 3.63**'
                x-openstack:
                  min-ver: '3.63'
              group_id:
                type: string
                format: uuid
                description: 'The ID of the group.


                  **New in version 3.13**'
                x-openstack:
                  min-ver: '3.63'
              provider_id:
                type:
                - string
                - 'null'
                format: uuid
                description: "The provider ID for the volume. The value is either\
                  \ a string set by the\ndriver or `null` if the driver doesn\u2019\
                  t use the field or if it hasn\u2019t\ncreated it yet. Only returned\
                  \ for administrators.\n\n**New in version 3.21**"
                x-openstack:
                  min-ver: '3.21'
              service_uuid:
                type: string
                format: uuid
                description: "A unique identifier that\u2019s used to indicate what\
                  \ node the volume-service\nfor a particular volume is being serviced\
                  \ by.\n\n**New in version 3.48**"
                x-openstack:
                  min-ver: '3.48'
              shared_targets:
                type: boolean
                description: "An indicator whether the host connecting the volume\
                  \ should lock for the\nwhole attach/detach process or not. `true`\
                  \ means only is iSCSI initiator\nrunning on host doesn\u2019t support\
                  \ manual scans, `false` means never use\nlocks, and `null` means\
                  \ to always use locks. Look at os-brick\u2019s\n`guard_connection`\
                  \ context manager. Default=True.\n\n**New in version 3.69**"
                x-openstack:
                  min-ver: '3.48'
              cluster_name:
                type: string
                description: 'The cluster name of volume backend.


                  **New in version 3.61**'
                x-openstack:
                  min-ver: '3.61'
              consumes_quota:
                type: boolean
                description: 'Whether this resource consumes quota or not. Resources
                  that not counted

                  for quota usage are usually temporary internal resources created
                  to perform

                  an operation.


                  **New in version 3.65**'
                x-openstack:
                  min-ver: '3.65'
            required:
            - attachments
            - bootable
            - encrypted
            - id
            - name
            - replication_status
            - size
            - status
            - user_id
            additionalProperties: true
          description: A list of `volume` objects.
    VolumesSummaryResponse:
      type: object
      description: Response of the project_id/volumes/summary:get operation
    VolumesListResponse:
      type: object
      description: A container with list of volume objects.
      properties:
        volumes:
          type: array
          items:
            type: object
            description: A volume object.
            properties:
              name:
                type:
                - string
                - 'null'
                description: The volume name.
              links:
                description: The volume links.
                type: array
                items:
                  type: object
                  description: Links to the resources in question. See [API Guide
                    / Links and References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
                    for more info.
                  properties:
                    href:
                      type: string
                      format: uri
                    rel:
                      type: string
              id:
                type: string
                format: uuid
                description: The UUID of the volume.
            required:
            - id
            - name
          description: A list of `volume` objects.
    VolumeShowResponse:
      type: object
      description: A volume object.
      properties:
        volume:
          type: object
          description: A volume object.
          properties:
            name:
              type:
              - string
              - 'null'
              description: The volume name.
            description:
              type:
              - string
              - 'null'
              description: The volume description.
            volume_type:
              type: string
              description: The associated volume type name for the volume.
            metadata:
              type: object
              patternProperties:
                ^[a-zA-Z0-9-_:. /]{1,255}$:
                  type: string
                  maxLength: 255
              additionalProperties: false
              description: A metadata object. Contains one or more metadata key and
                value pairs that are associated with the resource.
            snapshot_id:
              type: string
              format: uuid
              description: To create a volume from an existing snapshot, specify the
                UUID of the volume snapshot. The volume is created in same availability
                zone and with same size as the snapshot.
            source_volid:
              type: string
              format: uuid
              description: The UUID of the source volume. The API creates a new volume
                with the same size as the source volume unless a larger size is requested.
            consistencygroup_id:
              type: string
              format: uuid
              description: The UUID of the consistency group.
            size:
              type: integer
              format: int64
              description: The size of the volume, in gibibytes (GiB).
            availability_zone:
              type: string
              description: The name of the availability zone.
            bootable:
              type: string
              description: Enables or disables the bootable attribute. You can boot
                an instance from a bootable volume.
            multiattach:
              type: boolean
              description: If true, this volume can attach to more than one instance.
            status:
              type: string
              description: The volume status.
            migration_status:
              type: string
              description: The volume migration status. Admin only.
            attachments:
              description: Instance attachment information. If this volume is attached
                to a server instance, the attachments list includes the UUID of the
                attached server, an attachment UUID, the name of the attached host,
                if any, the volume UUID, the device, and the device UUID. Otherwise,
                this list is empty.
              type: array
              items:
                type: object
                properties:
                  server_id:
                    type:
                    - string
                    - 'null'
                    format: uuid
                  attachment_id:
                    type: string
                    format: uuid
                  attached_at:
                    type: string
                    format: date-time
                  host_name:
                    type:
                    - string
                    - 'null'
                  volume_id:
                    type: string
                    format: uuid
                  device:
                    type:
                    - string
                    - 'null'
                  id:
                    type: string
                    format: uuid
                additionalProperties: false
                required:
                - server_id
                - attachment_id
                - host_name
                - volume_id
                - device
                - id
            links:
              description: Links to the resources in question. See [API Guide / Links
                and References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
                for more info.
              type: array
              items:
                type: object
                description: Links to the resources in question. See [API Guide /
                  Links and References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
                  for more info.
                properties:
                  href:
                    type: string
                    format: uri
                  rel:
                    type: string
            encrypted:
              type: boolean
              description: If true, this volume is encrypted.
            created_at:
              type: string
              format: date-time
              description: The date and time when the resource was created.
            updated_at:
              type: string
              format: date-time
              description: The date and time when the resource was updated.
            replication_status:
              type:
              - string
              - 'null'
              description: The volume replication status.
            id:
              type: string
              format: uuid
              description: The UUID of the volume.
            user_id:
              type: string
              format: uuid
              description: The UUID of the user.
            volume_type_id:
              type: string
              format: uuid
              description: The associated volume type ID for the volume.
              x-openstack:
                min-ver: '3.63'
            group_id:
              type: string
              format: uuid
              description: The ID of the group.
              x-openstack:
                min-ver: '3.63'
            provider_id:
              type:
              - string
              - 'null'
              format: uuid
              description: "The provider ID for the volume. The value is either a\
                \ string set by the driver or null if the driver doesn\u2019t use\
                \ the field or if it hasn\u2019t created it yet. Only returned for\
                \ administrators."
              x-openstack:
                min-ver: '3.21'
            service_uuid:
              type: string
              format: uuid
              description: "A unique identifier that\u2019s used to indicate what\
                \ node the volume-service for a particular volume is being serviced\
                \ by."
              x-openstack:
                min-ver: '3.48'
            shared_targets:
              type: boolean
              description: "An indicator whether the host connecting the volume should\
                \ lock for the whole attach/detach process or not. true means only\
                \ is iSCSI initiator running on host doesn\u2019t support manual scans,\
                \ false means never use locks, and null means to always use locks.\
                \ Look at os-brick\u2019s guard_connection context manager. Default=True."
              x-openstack:
                min-ver: '3.48'
            cluster_name:
              type: string
              description: The cluster name of volume backend.
              x-openstack:
                min-ver: '3.61'
            consumes_quota:
              type: boolean
              description: Whether this resource consumes quota or not. Resources
                that not counted for quota usage are usually temporary internal resources
                created to perform an operation.
              x-openstack:
                min-ver: '3.65'
          required:
          - attachments
          - bootable
          - encrypted
          - id
          - name
          - replication_status
          - size
          - status
          - user_id
          additionalProperties: true
      additionalProperties: false
      required:
      - volume
    MessagesListResponse:
      type: object
      properties:
        messages:
          type: array
          items:
            type: object
            properties:
              request_id:
                type: string
                description: The id of the request during which the message was created.
              message_level:
                type: string
                description: "The level of the message, possible value is\nonly \u2018\
                  ERROR\u2019 now."
              links:
                type: array
                description: Links for the message.
                items:
                  type: object
                  description: Links to the resources in question. See [API Guide
                    / Links and References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
                    for more info.
                  properties:
                    href:
                      type: string
                      format: uri
                    rel:
                      type: string
              event_id:
                type: string
                description: 'The id of the event to this message, this id could

                  eventually be translated into `user_message`.'
              created_at:
                type: string
                format: date-time
                description: "The date and time when the resource was created.\n\n\
                  The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):\n\
                  \n```\nCCYY-MM-DDThh:mm:ss\xB1hh:mm\n\n```\n\nFor example, `2015-08-27T09:49:58-05:00`.\n\
                  \nThe `\xB1hh:mm` value, if included, is the time zone as an offset\n\
                  from UTC."
              guaranteed_until:
                type: string
                format: date-time
                description: 'The expire time of the message, this message could be

                  deleted after this time.'
              resource_uuid:
                type: string
                format: uuid
                description: 'The UUID of the resource during whose operation the

                  message was created.'
              id:
                type: string
                format: uuid
                description: The UUID for the message.
              resource_type:
                type: string
                description: The resource type corresponding to `resource_uuid`.
              user_message:
                type: string
                description: The translated readable message corresponding to `event_id`.
            additionalProperties: false
            required:
            - request_id
            - message_level
            - event_id
            - created_at
            - id
            - user_message
          description: A collection of user messages.
      additionalProperties: false
      required:
      - messages
    MessageShowResponse:
      type: object
      properties:
        message:
          type: object
          properties:
            request_id:
              type: string
              description: The id of the request during which the message was created.
            message_level:
              type: string
              description: "The level of the message, possible value is only \u2018\
                ERROR\u2019 now."
            links:
              type: array
              description: Links to the resources in question. See [API Guide / Links
                and References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
                for more info.
              items:
                type: object
                description: Links to the resources in question. See [API Guide /
                  Links and References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
                  for more info.
                properties:
                  href:
                    type: string
                    format: uri
                  rel:
                    type: string
            event_id:
              type: string
              description: The id of the event to this message, this id could eventually
                be translated into user_message.
            created_at:
              type: string
              format: date-time
              description: The date and time when the resource was created.
            guaranteed_until:
              type: string
              format: date-time
              description: The expire time of the message, this message could be deleted
                after this time.
            resource_uuid:
              type: string
              format: uuid
              description: The UUID of the resource during whose operation the message
                was created.
            id:
              type: string
              format: uuid
              description: The UUID for the message.
            resource_type:
              type: string
              description: The resource type corresponding to resource_uuid.
            user_message:
              type: string
              description: The translated readable message corresponding to event_id.
          additionalProperties: false
          required:
          - request_id
          - message_level
          - event_id
          - created_at
          - id
          - user_message
      additionalProperties: false
      required:
      - message
    ClustersDetailResponse:
      type: object
      properties:
        clusters:
          type: array
          items:
            type: object
            properties:
              num_hosts:
                type: integer
                description: The number of hosts in the cluster.
              num_down_hosts:
                type: integer
                description: The number of down hosts in the cluster.
              last_heartbeat:
                type: string
                format: date-time
                description: "The last periodic heartbeat received.\n\nThe date and\
                  \ time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):\n\
                  \n```\nCCYY-MM-DDThh:mm:ss\xB1hh:mm\n\n```\n\nFor example, `2015-08-27T09:49:58-05:00`.\n\
                  \nThe `\xB1hh:mm` value, if included, is the time zone as an offset\n\
                  from UTC."
              created_at:
                type: string
                format: date-time
                description: "The date and time when the resource was created.\n\n\
                  The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):\n\
                  \n```\nCCYY-MM-DDThh:mm:ss\xB1hh:mm\n\n```\n\nFor example, `2015-08-27T09:49:58-05:00`.\n\
                  \nThe `\xB1hh:mm` value, if included, is the time zone as an offset\n\
                  from UTC."
              updated_at:
                type: string
                format: date-time
                description: "The date and time when the resource was updated.\n\n\
                  The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):\n\
                  \n```\nCCYY-MM-DDThh:mm:ss\xB1hh:mm\n\n```\n\nFor example, `2015-08-27T09:49:58-05:00`.\n\
                  \nThe `\xB1hh:mm` value, if included, is the time zone as an offset\n\
                  from UTC. In the previous example, the offset value is `-05:00`.\n\
                  \nIf the `updated_at` date and time stamp is not set, its value\
                  \ is\n`null`."
              disabled_reason:
                type:
                - string
                - 'null'
                description: The reason for disabling a resource.
              frozen:
                type:
                - boolean
                - 'null'
                description: 'Whether the cluster is frozen or not.


                  **New in version 3.26**'
                x-openstack:
                  min-ver: '3.26'
              active_backend_id:
                type:
                - string
                - 'null'
                description: 'The ID of active storage backend. Only in `cinder-volume`
                  service.


                  **New in version 3.26**'
                x-openstack:
                  min-ver: '3.26'
              binary:
                type: string
                description: The binary name of the services in the cluster.
              name:
                type: string
                description: The name of the service cluster.
              replication_status:
                type: string
                description: 'The cluster replication status. Only included in responses
                  if configured.

                  One of: `enabled` or `disabled`.'
                enum:
                - enabled
                - disabled
              state:
                type: string
                description: The state of the cluster. One of `up` or `down`.
                enum:
                - up
                - down
              status:
                type: string
                description: The status of the cluster. One of `enabled` or `disabled`.
                enum:
                - enabled
                - disabled
          description: A list of cluster objects.
    ClustersListResponse:
      type: object
      properties:
        clusters:
          type: array
          items:
            type: object
            properties:
              binary:
                type: string
                description: The binary name of the services in the cluster.
              name:
                type: string
                description: The name of the service cluster.
              replication_status:
                type: string
                description: 'The cluster replication status. Only included in responses
                  if configured.

                  One of: `enabled` or `disabled`.'
                enum:
                - enabled
                - disabled
              state:
                type: string
                description: The state of the cluster. One of `up` or `down`.
                enum:
                - up
                - down
              status:
                type: string
                description: The status of the cluster. One of `enabled` or `disabled`.
                enum:
                - enabled
                - disabled
          description: A list of cluster objects.
    ClusterShowResponse:
      type: object
      properties:
        cluster:
          type: object
          properties:
            num_hosts:
              type: integer
              description: The number of hosts in the cluster.
            num_down_hosts:
              type: integer
              description: The number of down hosts in the cluster.
            last_heartbeat:
              type: string
              format: date-time
              description: The last periodic heartbeat received.
            created_at:
              type: string
              format: date-time
              description: The date and time when the resource was created.
            updated_at:
              type: string
              format: date-time
              description: The date and time when the resource was updated.
            disabled_reason:
              type:
              - string
              - 'null'
              description: The reason for disabling a resource.
            frozen:
              type:
              - boolean
              - 'null'
              description: Whether the cluster is frozen or not.
              x-openstack:
                min-ver: '3.26'
            active_backend_id:
              type:
              - string
              - 'null'
              description: The ID of active storage backend. Only in cinder-volume
                service.
              x-openstack:
                min-ver: '3.26'
            binary:
              type: string
              description: The binary name of the services in the cluster.
            name:
              type: string
              description: The name of the service cluster.
            replication_status:
              type: string
              description: The cluster replication status. Only included in responses
                if configured.
              enum:
              - enabled
              - disabled
            state:
              type: string
              description: The state of the cluster.
              enum:
              - up
              - down
            status:
              type: string
              description: The status of the cluster.
              enum:
              - enabled
              - disabled
    TypesListResponse:
      type: object
      properties:
        volume_types:
          type: array
          items:
            type: object
            properties:
              description:
                type: string
                description: The volume type description.
              extra_specs:
                description: 'A key and value pair that contains additional

                  specifications that are associated with the volume type. Examples

                  include capabilities, capacity, compression, and so on, depending

                  on the storage driver in use.'
                type: object
                patternProperties:
                  ^[a-zA-Z0-9-_:.]{1,255}$:
                    type:
                    - string
                    - 'null'
                    minLength: 0
                    maxLength: 255
                additionalProperties: false
              id:
                type: string
                format: uuid
                description: The UUID of the volume type.
              is_public:
                type: boolean
                description: Whether the volume type is publicly visible.
              name:
                type: string
                description: The name of the volume type.
              os-volume-type-access:is_public:
                type: boolean
                description: Whether the volume type is publicly visible.
              qos_specs_id:
                type: string
                format: uuid
                description: The QoS specifications ID.
            required:
            - id
            - name
          description: 'The list of volume types. In an environment with

            multiple-storage back ends, the scheduler determines where to send

            the volume based on the volume type. For information about how to

            use volume types to create multiple- storage back ends, see

            [Configure multiple-storage back ends](https://docs.openstack.org/cinder/latest/admin/blockstorage-multi-backend.html).'
    TypeShowResponse:
      type: object
      properties:
        volume_type:
          type: object
          properties:
            description:
              type: string
              description: The volume type description.
            extra_specs:
              description: A key and value pair that contains additional specifications
                that are associated with the volume type. Examples include capabilities,
                capacity, compression, and so on, depending on the storage driver
                in use.
              type: object
              patternProperties:
                ^[a-zA-Z0-9-_:.]{1,255}$:
                  type:
                  - string
                  - 'null'
                  minLength: 0
                  maxLength: 255
              additionalProperties: false
            id:
              type: string
              format: uuid
              description: The UUID of the volume type.
            is_public:
              type: boolean
              description: Whether the volume type is publicly visible.
            name:
              type: string
              description: The volume type description.
            os-volume-type-access:is_public:
              type: boolean
              description: Whether the volume type is publicly visible.
            qos_specs_id:
              type: string
              format: uuid
              description: The QoS specifications ID.
          required:
          - id
          - name
    Group_TypesListResponse:
      type: object
      description: A container with list of group type objects.
      properties:
        group_types:
          type: array
          items:
            type: object
            description: A volume group type object.
            properties:
              name:
                type:
                - string
                - 'null'
                description: The group type name.
              id:
                type: string
                format: uuid
                description: The group type ID.
              description:
                type: string
                description: The group type description.
              is_public:
                type: boolean
                description: Whether the group type is publicly visible.
              group_specs:
                type: object
                description: 'A set of key and value pairs that contains the

                  specifications for a group type.'
                patternProperties:
                  ^.+$:
                    type: string
            required:
            - id
            - name
          description: The list of group types.
    Group_TypeShowResponse:
      type: object
      properties:
        group_type:
          type: object
          description: A volume group type object.
          properties:
            name:
              type:
              - string
              - 'null'
              description: The group type name.
            id:
              type: string
              format: uuid
              description: The UUID of the group type.
            description:
              type: string
              description: The group type description.
            is_public:
              type: boolean
              description: Whether the group type is publicly visible.
            group_specs:
              type: object
              description: A set of key and value pairs that contains the specifications
                for a group type.
              patternProperties:
                ^.+$:
                  type: string
          required:
          - id
          - name
    Group_TypesGroup_SpecsListResponse:
      type: object
      properties:
        group_specs:
          type: object
          description: 'A set of key and value pairs that contains the

            specifications for a group type.'
          patternProperties:
            ^.+$:
              type: string
    Group_TypesGroup_SpecShowResponse:
      type: object
      description: A set of key and value pairs that contains the specifications for
        a group type.
      patternProperties:
        ^.+$:
          type: string
    GroupsDetailResponse:
      type: object
      description: A container with list of group objects.
      properties:
        groups:
          type: array
          items:
            type: object
            description: A group object.
            properties:
              status:
                type: string
                description: The status of the generic group.
              description:
                type:
                - string
                - 'null'
                description: The group description.
              availability_zone:
                type: string
                description: The name of the availability zone.
              created_at:
                type: string
                format: date-time
                description: "The date and time when the resource was created.\n\n\
                  The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):\n\
                  \n```\nCCYY-MM-DDThh:mm:ss\xB1hh:mm\n\n```\n\nFor example, `2015-08-27T09:49:58-05:00`.\n\
                  \nThe `\xB1hh:mm` value, if included, is the time zone as an offset\n\
                  from UTC."
              group_type:
                type: string
                format: uuid
                description: The group type ID.
              group_snapshot_id:
                type:
                - string
                - 'null'
                description: The ID of the group snapshot.
              source_group_id:
                type:
                - string
                - 'null'
                description: The UUID of the source group.
              volume_types:
                type: array
                items:
                  type: string
                  format: uuid
                  description: The ID of the volume type.
                description: 'The list of volume types. In an environment with

                  multiple-storage back ends, the scheduler determines where to send

                  the volume based on the volume type. For information about how to

                  use volume types to create multiple- storage back ends, see

                  [Configure multiple-storage back ends](https://docs.openstack.org/cinder/latest/admin/blockstorage-multi-backend.html).'
              volumes:
                type: array
                items:
                  type: string
                  format: uuid
                  description: ''
                description: 'A list of `volume` ids, available only when `list_volume`
                  set true.


                  **New in version 3.25**'
                x-openstack:
                  min-ver: '3.25'
              replication_status:
                type:
                - string
                - 'null'
                description: 'The group replication status.


                  **New in version 3.38**'
                x-openstack:
                  min-ver: '3.38'
              project_id:
                type:
                - string
                - 'null'
                format: uuid
                description: 'The UUID of the volume group project.


                  **New in version 3.58**'
                x-openstack:
                  min-ver: '3.58'
              name:
                type:
                - string
                - 'null'
                description: The name of the object.
              id:
                type: string
                format: uuid
                description: The UUID of the group.
            required:
            - id
            - name
          description: A collections of groups.
    GroupsListResponse:
      type: object
      description: A container with list of group objects.
      properties:
        groups:
          type: array
          items:
            type: object
            description: A volume group object.
            properties:
              name:
                type:
                - string
                - 'null'
                description: The group name.
              id:
                type: string
                format: uuid
                description: The UUID of the object.
          description: A collections of groups.
    GroupShowResponse:
      type: object
      properties:
        group:
          type: object
          description: A group object.
          properties:
            status:
              type: string
              description: The status of the generic group.
            description:
              type:
              - string
              - 'null'
              description: The group description.
            availability_zone:
              type: string
              description: The name of the availability zone.
            created_at:
              type: string
              format: date-time
              description: The date and time when the resource was created.
            group_type:
              type: string
              format: uuid
              description: The group type ID.
            group_snapshot_id:
              type:
              - string
              - 'null'
              description: The ID of the group snapshot.
            source_group_id:
              type:
              - string
              - 'null'
              description: The UUID of the source group.
            volume_types:
              type: array
              items:
                type: string
                format: uuid
                description: The ID of the volume type.
              description: 'The list of volume types. In an environment with multiple-storage
                back ends, the scheduler determines where to send the volume based
                on the volume type. '
            volumes:
              type: array
              items:
                type: string
                format: uuid
                description: ''
              description: A list of volume ids, available only when list_volume set
                true.
              x-openstack:
                min-ver: '3.25'
            replication_status:
              type:
              - string
              - 'null'
              description: The group replication status.
              x-openstack:
                min-ver: '3.38'
            project_id:
              type:
              - string
              - 'null'
              format: uuid
              description: The UUID of the volume group project.
              x-openstack:
                min-ver: '3.58'
            name:
              type:
              - string
              - 'null'
              description: The group name.
            id:
              type: string
              format: uuid
              description: The UUID of the group.
          required:
          - id
          - name
    Group_SnapshotsDetailResponse:
      type: object
      description: A container with list of group snapshot objects.
      properties:
        group_snapshots:
          type: array
          items:
            type: object
            description: A group snapshot bject.
            properties:
              status:
                type: string
                description: The `status` of the generic group snapshot.
              description:
                type:
                - string
                - 'null'
                description: The group snapshot description.
              created_at:
                type: string
                format: date-time
                description: "The date and time when the resource was created.\n\n\
                  The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):\n\
                  \n```\nCCYY-MM-DDThh:mm:ss\xB1hh:mm\n\n```\n\nFor example, `2015-08-27T09:49:58-05:00`.\n\
                  \nThe `\xB1hh:mm` value, if included, is the time zone as an offset\n\
                  from UTC."
              group_type:
                type: string
                format: uuid
                description: The group type ID.
              group_id:
                type: string
                format: uuid
                description: The ID of the group.
              group_type_id:
                type: string
                format: uuid
                description: The group type ID.
              project_id:
                type:
                - string
                - 'null'
                format: uuid
                description: 'The UUID of the volume group snapshot project.


                  **New in version 3.58**'
                x-openstack:
                  min-ver: '3.58'
              name:
                type:
                - string
                - 'null'
                description: The group snapshot name.
              id:
                type: string
                format: uuid
                description: The ID of the group snapshot.
            required:
            - id
            - name
            - status
          description: A collection of group snapshots.
    Group_SnapshotsListResponse:
      type: object
      description: A container with list of group snapshot objects.
      properties:
        group_snapshots:
          type: array
          items:
            type: object
            description: A volume group snapshot object.
            properties:
              name:
                type:
                - string
                - 'null'
                description: The group snapshot name.
              id:
                type: string
                format: uuid
                description: The ID of the group snapshot.
          description: A collection of group snapshots.
    Group_SnapshotShowResponse:
      type: object
      properties:
        group_snapshot:
          type: object
          description: A group snapshot bject.
          properties:
            status:
              type: string
              description: The status of the generic group snapshot.
            description:
              type:
              - string
              - 'null'
              description: The group snapshot description.
            created_at:
              type: string
              format: date-time
              description: The date and time when the resource was created.
            group_type:
              type: string
              format: uuid
              description: The group type ID.
            group_id:
              type: string
              format: uuid
              description: The ID of the group.
            group_type_id:
              type: string
              format: uuid
              description: The group type ID.
            project_id:
              type:
              - string
              - 'null'
              format: uuid
              description: The UUID of the volume group project.
              x-openstack:
                min-ver: '3.58'
            name:
              type:
              - string
              - 'null'
              description: The group snapshot name.
            id:
              type: string
              format: uuid
              description: The UUID of the group snapshot.
          required:
          - id
          - name
          - status
    SnapshotsDetailResponse:
      type: object
      description: A container with list of snapshot objects.
      properties:
        snapshots:
          type: array
          items:
            type: object
            properties:
              os-extended-snapshot-attributes:progress:
                type: string
                description: A percentage value for the build progress.
              os-extended-snapshot-attributes:project_id:
                type: string
                format: uuid
                description: The UUID of the owning project.
              group_snapshot_id:
                type: string
                format: uuid
                description: 'The ID of the group snapshot.


                  **New in version 3.14**'
                x-openstack:
                  min-ver: '3.14'
              consumes_quota:
                type:
                - boolean
                - 'null'
                description: 'Whether this resource consumes quota or not. Resources
                  that not counted

                  for quota usage are usually temporary internal resources created
                  to perform

                  an operation.


                  **New in version 3.65**'
                x-openstack:
                  min-ver: '3.65'
              status:
                type: string
                enum:
                - creating
                - available
                - backing-up
                - deleting
                - error
                - deleted
                - unmanaging
                - restoring
                - error_deleting
                description: The status for the snapshot.
              description:
                type:
                - string
                - 'null'
                description: A description for the snapshot.
              created_at:
                type: string
                format: date-time
                description: "The date and time when the resource was created.\n\n\
                  The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):\n\
                  \n```\nCCYY-MM-DDThh:mm:ss\xB1hh:mm\n\n```\n\nFor example, `2015-08-27T09:49:58-05:00`.\n\
                  \nThe `\xB1hh:mm` value, if included, is the time zone as an offset\n\
                  from UTC."
              updated_at:
                type:
                - string
                - 'null'
                format: date-time
                description: "The date and time when the resource was updated.\n\n\
                  The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):\n\
                  \n```\nCCYY-MM-DDThh:mm:ss\xB1hh:mm\n\n```\n\nFor example, `2015-08-27T09:49:58-05:00`.\n\
                  \nThe `\xB1hh:mm` value, if included, is the time zone as an offset\n\
                  from UTC. In the previous example, the offset value is `-05:00`.\n\
                  \nIf the `updated_at` date and time stamp is not set, its value\
                  \ is\n`null`."
              name:
                type:
                - string
                - 'null'
                description: The name of the object.
              volume_id:
                type: string
                format: uuid
                description: 'If the snapshot was created from a volume, the

                  volume ID.'
              metadata:
                type: object
                patternProperties:
                  ^[a-zA-Z0-9-_:. /]{1,255}$:
                    type: string
                    maxLength: 255
                additionalProperties: false
                description: 'One or more metadata key and value pairs for the

                  snapshot, if any.'
              id:
                type: string
                format: uuid
                description: The snapshot UUID.
              size:
                type: integer
                format: int64
                description: The size of the volume, in gibibytes (GiB).
              count:
                type:
                - integer
                - 'null'
                description: 'The total count of requested resource before pagination
                  is applied.


                  **New in version 3.45**'
                x-openstack:
                  min-ver: '3.45'
            required:
            - created_at
            - id
            - name
            - size
            - status
            - updated_at
          description: A list of snapshot objects.
      additionalProperties: false
      required:
      - snapshots
    SnapshotsListResponse:
      type: object
      description: A container with list of snapshot objects.
      properties:
        snapshots:
          type: array
          items:
            type: object
            properties:
              status:
                type: string
                enum:
                - creating
                - available
                - backing-up
                - deleting
                - error
                - deleted
                - unmanaging
                - restoring
                - error_deleting
                description: The status for the snapshot.
              description:
                type:
                - string
                - 'null'
                description: A description for the snapshot.
              created_at:
                type: string
                format: date-time
                description: "The date and time when the resource was created.\n\n\
                  The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):\n\
                  \n```\nCCYY-MM-DDThh:mm:ss\xB1hh:mm\n\n```\n\nFor example, `2015-08-27T09:49:58-05:00`.\n\
                  \nThe `\xB1hh:mm` value, if included, is the time zone as an offset\n\
                  from UTC."
              updated_at:
                type:
                - string
                - 'null'
                format: date-time
                description: "The date and time when the resource was updated.\n\n\
                  The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):\n\
                  \n```\nCCYY-MM-DDThh:mm:ss\xB1hh:mm\n\n```\n\nFor example, `2015-08-27T09:49:58-05:00`.\n\
                  \nThe `\xB1hh:mm` value, if included, is the time zone as an offset\n\
                  from UTC. In the previous example, the offset value is `-05:00`.\n\
                  \nIf the `updated_at` date and time stamp is not set, its value\
                  \ is\n`null`."
              name:
                type:
                - string
                - 'null'
                description: The name of the object.
              volume_id:
                type: string
                format: uuid
                description: 'If the snapshot was created from a volume, the

                  volume ID.'
              metadata:
                type: object
                patternProperties:
                  ^[a-zA-Z0-9-_:. /]{1,255}$:
                    type: string
                    maxLength: 255
                additionalProperties: false
                description: 'One or more metadata key and value pairs for the

                  snapshot, if any.'
              id:
                type: string
                format: uuid
                description: The snapshot UUID.
              size:
                type: integer
                format: int64
                description: The size of the volume, in gibibytes (GiB).
              count:
                type:
                - integer
                - 'null'
                description: 'The total count of requested resource before pagination
                  is applied.


                  **New in version 3.45**'
                x-openstack:
                  min-ver: '3.45'
            additionalProperties: false
            required:
            - status
            - description
            - created_at
            - metadata
            - name
            - volume_id
            - id
            - size
            - updated_at
          description: A list of volume objects.
      additionalProperties: false
      required:
      - snapshots
    SnapshotShowResponse:
      type: object
      description: A snapshot object.
      properties:
        snapshot:
          type: object
          properties:
            os-extended-snapshot-attributes:progress:
              type: string
              description: A percentage value for the build progress.
            os-extended-snapshot-attributes:project_id:
              type: string
              format: uuid
              description: The UUID of the owning project.
            group_snapshot_id:
              type: string
              format: uuid
              description: The ID of the group snapshot.
              x-openstack:
                min-ver: '3.14'
            consumes_quota:
              type:
              - boolean
              - 'null'
              description: Whether this resource consumes quota or not. Resources
                that not counted for quota usage are usually temporary internal resources
                created to perform an operation.
              x-openstack:
                min-ver: '3.65'
            status:
              type: string
              enum:
              - creating
              - available
              - backing-up
              - deleting
              - error
              - deleted
              - unmanaging
              - restoring
              - error_deleting
              description: The status for the snapshot.
            description:
              type:
              - string
              - 'null'
              description: A description for the snapshot.
            created_at:
              type: string
              format: date-time
              description: The date and time when the resource was created.
            updated_at:
              type:
              - string
              - 'null'
              format: date-time
              description: The date and time when the resource was updated.
            name:
              type:
              - string
              - 'null'
              description: The name of the object.
            volume_id:
              type: string
              format: uuid
              description: If the snapshot was created from a volume, the volume ID.
            metadata:
              type: object
              patternProperties:
                ^[a-zA-Z0-9-_:. /]{1,255}$:
                  type: string
                  maxLength: 255
              additionalProperties: false
              description: A metadata object. Contains one or more metadata key and
                value pairs that are associated with the resource.
            id:
              type: string
              format: uuid
              description: The snapshot UUID.
            size:
              type: integer
              format: int64
              description: The size of the volume, in gibibytes (GiB).
            count:
              type:
              - integer
              - 'null'
              description: The total count of requested resource before pagination
                is applied.
              x-openstack:
                min-ver: '3.45'
          required:
          - created_at
          - id
          - name
          - size
          - status
          - updated_at
      additionalProperties: false
      required:
      - snapshot
    LimitsListResponse:
      type: object
      properties:
        limits:
          type: object
          properties:
            rate:
              type: array
              items: {}
              description: 'Rate-limit volume copy bandwidth, used to

                mitigate slow down of data access from the instances.'
            absolute:
              type: object
              properties:
                totalSnapshotsUsed:
                  type: integer
                  description: The total number of snapshots used.
                maxTotalBackups:
                  type: integer
                  description: The maximum number of backups.
                maxTotalVolumeGigabytes:
                  type: integer
                  format: int64
                  description: 'The maximum total amount of volumes, in gibibytes

                    (GiB).'
                maxTotalSnapshots:
                  type: integer
                  description: The maximum number of snapshots.
                maxTotalBackupGigabytes:
                  type: integer
                  format: int64
                  description: 'The maximum total amount of backups, in gibibytes

                    (GiB).'
                totalBackupGigabytesUsed:
                  type: integer
                  format: int64
                  description: The total number of backups gibibytes (GiB) used.
                maxTotalVolumes:
                  type: integer
                  description: The maximum number of volumes.
                totalVolumesUsed:
                  type: integer
                  description: The total number of volumes used.
                totalBackupsUsed:
                  type: integer
                  description: The total number of backups used.
                totalGigabytesUsed:
                  type: integer
                  format: int64
                  description: The total number of gibibytes (GiB) used.
              additionalProperties: false
              required:
              - totalSnapshotsUsed
              - maxTotalBackups
              - maxTotalVolumeGigabytes
              - maxTotalSnapshots
              - maxTotalBackupGigabytes
              - totalBackupGigabytesUsed
              - maxTotalVolumes
              - totalVolumesUsed
              - totalBackupsUsed
              - totalGigabytesUsed
              description: An `absolute` limits object.
          additionalProperties: false
          required:
          - rate
          - absolute
          description: A list of `limit` objects.
    SnapshotsMetadataListResponse:
      type: object
      description: Metadata key and value pairs. The maximum size for each metadata
        key and value pair is 255 bytes.
      properties:
        metadata:
          type: object
          patternProperties:
            ^[a-zA-Z0-9-_:. /]{1,255}$:
              type: string
              maxLength: 255
          additionalProperties: false
          description: 'One or more metadata key and value pairs for the

            snapshot, if any.'
      additionalProperties: false
      required:
      - metadata
    SnapshotsMetadataShowResponse:
      type: object
      description: Metadata key and value pairs. The maximum size for each metadata
        key and value pair is 255 bytes.
      properties:
        meta:
          maxProperties: 1
          type: object
          patternProperties:
            ^[a-zA-Z0-9-_:. /]{1,255}$:
              type: string
              maxLength: 255
          additionalProperties: false
          description: A metadata object. Contains one or more metadata key and value
            pairs that are associated with the resource.
      additionalProperties: false
      required:
      - meta
    VolumesMetadataListResponse:
      type: object
      description: Metadata key and value pairs. The maximum size for each metadata
        key and value pair is 255 bytes.
      properties:
        metadata:
          type: object
          patternProperties:
            ^[a-zA-Z0-9-_:. /]{1,255}$:
              type: string
              maxLength: 255
          additionalProperties: false
          description: 'One or more metadata key and value pairs that are

            associated with the volume.'
      additionalProperties: false
      required:
      - metadata
    VolumesMetadataShowResponse:
      type: object
      description: Metadata key and value pairs. The maximum size for each metadata
        key and value pair is 255 bytes.
      properties:
        meta:
          maxProperties: 1
          type: object
          patternProperties:
            ^[a-zA-Z0-9-_:. /]{1,255}$:
              type: string
              maxLength: 255
          additionalProperties: false
          description: A metadata object. Contains one or more metadata key and value
            pairs that are associated with the resource.
      additionalProperties: false
      required:
      - meta
    ConsistencygroupsDetailResponse:
      type: object
      description: Response of the project_id/consistencygroups/detail:get operation
    ConsistencygroupsListResponse:
      type: object
      description: Response of the project_id/consistencygroups:get operation
    ConsistencygroupShowResponse:
      type: object
      description: Response of the project_id/consistencygroups/id:get operation
    Manageable_VolumesDetailResponse:
      type: object
      properties:
        manageable-volumes:
          type: array
          items:
            type: object
            description: Manageable volume object.
            properties:
              cinder_id:
                type: string
                format: uuid
                description: The UUID of the resource in Cinder.
              reason_not_safe:
                type:
                - string
                - 'null'
                description: "The reason why the resource can\u2019t be managed."
              extra_info:
                type:
                - string
                - 'null'
                description: More information about the resource.
              safe_to_manage:
                type:
                - boolean
                - 'null'
                description: If the resource can be managed or not.
              reference:
                type: object
                description: Some information for the resource.
                properties:
                  source-name:
                    type: string
                    description: "The resource\u2019s name."
              size:
                type: integer
                format: int64
                description: The size of the volume, in gibibytes (GiB).
          description: A list of manageable volumes.
    Manageable_VolumesListResponse:
      type: object
      properties:
        manageable-volumes:
          type: array
          items:
            type: object
            description: Manageable volume object.
            properties:
              safe_to_manage:
                type:
                - boolean
                - 'null'
                description: If the resource can be managed or not.
              reference:
                type: object
                description: Some information for the resource.
                properties:
                  source-name:
                    type: string
                    description: "The resource\u2019s name."
              size:
                type: integer
                format: int64
                description: The size of the volume, in gibibytes (GiB).
          description: A list of manageable volumes.
    Manageable_SnapshotsDetailResponse:
      type: object
      properties:
        manageable-snapshots:
          type: array
          items:
            type: object
            properties:
              cinder_id:
                type:
                - string
                - 'null'
                format: uuid
                description: The UUID of the resource in Cinder.
              reason_not_safe:
                type:
                - string
                - 'null'
                description: "The reason why the resource can\u2019t be managed."
              extra_info:
                type:
                - string
                - 'null'
                description: More information about the resource.
              source_reference:
                type: object
                properties:
                  source-name:
                    type: string
                    description: "The resource\u2019s name."
                description: "The snapshot\u2019s origin volume information."
              safe_to_manage:
                type:
                - boolean
                - 'null'
                description: If the resource can be managed or not.
              reference:
                type: object
                description: Some information for the resource.
                properties:
                  source-name:
                    type: string
                    description: "The resource\u2019s name."
              size:
                type: integer
                format: int64
                description: The size of the volume, in gibibytes (GiB).
          description: A list of manageable snapshots.
    Manageable_SnapshotsListResponse:
      type: object
      properties:
        manageable-snapshots:
          type: array
          items:
            type: object
            properties:
              source_reference:
                type: object
                properties:
                  source-name:
                    type: string
                    description: "The resource\u2019s name."
                description: "The snapshot\u2019s origin volume information."
              safe_to_manage:
                type:
                - boolean
                - 'null'
                description: If the resource can be managed or not.
              reference:
                type: object
                description: Some information for the resource.
                properties:
                  source-name:
                    type: string
                    description: "The resource\u2019s name."
              size:
                type: integer
                format: int64
                description: The size of the volume, in gibibytes (GiB).
            additionalProperties: false
            required:
            - source_reference
            - safe_to_manage
            - reference
            - size
          description: A list of manageable snapshots.
    BackupsDetailResponse:
      type: object
      description: A container with list of backup objects.
      properties:
        backups:
          type: array
          items:
            type: object
            description: A backup object.
            properties:
              availability_zone:
                type: string
                description: The name of the availability zone.
              container:
                type:
                - string
                - 'null'
                description: The container name or null.
              created_at:
                type: string
                format: date-time
                description: "The date and time when the resource was created.\n\n\
                  The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):\n\
                  \n```\nCCYY-MM-DDThh:mm:ss\xB1hh:mm\n\n```\n\nFor example, `2015-08-27T09:49:58-05:00`.\n\
                  \nThe `\xB1hh:mm` value, if included, is the time zone as an offset\n\
                  from UTC."
              data_timestamp:
                type: string
                format: date-time
                description: 'The time when the data on the volume was first saved.
                  If it is

                  a backup from volume, it will be the same as `created_at`

                  for a backup. If it is a backup from a snapshot, it will be the

                  same as `created_at` for the snapshot.'
              description:
                type:
                - string
                - 'null'
                description: The backup description or null.
              fail_reason:
                type:
                - string
                - 'null'
                description: 'If the backup failed, the reason for the failure.

                  Otherwise, null.'
              has_dependent_backups:
                type: boolean
                description: 'If this value is `true`, there are other backups depending
                  on

                  this backup.'
              id:
                type: string
                format: uuid
                description: The UUID of the backup.
              is_incremental:
                type: boolean
                description: 'Indicates whether the backup mode is incremental.

                  If this value is `true`, the backup mode is incremental. If this

                  value is `false`, the backup mode is full.'
              links:
                description: Links for the backup.
                type: array
                items:
                  type: object
                  description: Links to the resources in question. See [API Guide
                    / Links and References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
                    for more info.
                  properties:
                    href:
                      type: string
                      format: uri
                    rel:
                      type: string
              metadata:
                type: object
                patternProperties:
                  ^[a-zA-Z0-9-_:. /]{1,255}$:
                    type: string
                    maxLength: 255
                additionalProperties: false
                description: 'The backup metadata key value pairs.


                  **New in version 3.43**'
              name:
                type:
                - string
                - 'null'
                description: The backup name.
              object_count:
                type: integer
                description: The number of objects in the backup.
              size:
                type: integer
                format: int64
                description: The size of the volume, in gibibytes (GiB).
              snapshot_id:
                type:
                - string
                - 'null'
                format: uuid
                description: The UUID of the source volume snapshot.
              status:
                type: string
                description: 'The backup status. Refer to Backup statuses table

                  for the possible status value.'
              updated_at:
                type: string
                format: date-time
                description: "The date and time when the resource was updated.\n\n\
                  The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):\n\
                  \n```\nCCYY-MM-DDThh:mm:ss\xB1hh:mm\n\n```\n\nFor example, `2015-08-27T09:49:58-05:00`.\n\
                  \nThe `\xB1hh:mm` value, if included, is the time zone as an offset\n\
                  from UTC. In the previous example, the offset value is `-05:00`.\n\
                  \nIf the `updated_at` date and time stamp is not set, its value\
                  \ is\n`null`."
              volume_id:
                type: string
                format: uuid
                description: The UUID of the volume.
            required:
            - id
            - name
            - size
            - status
            - volume_id
          description: A list of `backup` objects.
    BackupsListResponse:
      type: object
      description: A container with list of backup objects.
      properties:
        backups:
          type: array
          items:
            type: object
            description: A backup object.
            properties:
              name:
                type:
                - string
                - 'null'
                description: The backup name.
              links:
                description: Links for the backup.
                type: array
                items:
                  type: object
                  description: Links to the resources in question. See [API Guide
                    / Links and References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
                    for more info.
                  properties:
                    href:
                      type: string
                      format: uri
                    rel:
                      type: string
              id:
                type: string
                format: uuid
                description: The UUID of the backup.
            required:
            - id
            - name
          description: A list of `backup` objects.
    BackupShowResponse:
      type: object
      properties:
        backup:
          type: object
          description: A backup object.
          properties:
            availability_zone:
              type: string
              description: The name of the availability zone.
            container:
              type:
              - string
              - 'null'
              description: The container name or null.
            created_at:
              type: string
              format: date-time
              description: The date and time when the resource was created. The date
                and time stamp format is ISO 8601
            data_timestamp:
              type: string
              format: date-time
              description: The time when the data on the volume was first saved. If
                it is a backup from volume, it will be the same as created_at for
                a backup. If it is a backup from a snapshot, it will be the same as
                created_at for the snapshot.
            description:
              type:
              - string
              - 'null'
              description: The backup description or null.
            fail_reason:
              type:
              - string
              - 'null'
              description: If the backup failed, the reason for the failure. Otherwise,
                null.
            has_dependent_backups:
              type: boolean
              description: If this value is true, there are other backups depending
                on this backup.
            id:
              type: string
              format: uuid
              description: The UUID of the backup.
            is_incremental:
              type: boolean
              description: Indicates whether the backup mode is incremental. If this
                value is true, the backup mode is incremental. If this value is false,
                the backup mode is full.
            links:
              description: Links to the resources in question. See [API Guide / Links
                and References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
                for more info.
              type: array
              items:
                type: object
                description: Links to the resources in question. See [API Guide /
                  Links and References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
                  for more info.
                properties:
                  href:
                    type: string
                    format: uri
                  rel:
                    type: string
            metadata:
              type: object
              patternProperties:
                ^[a-zA-Z0-9-_:. /]{1,255}$:
                  type: string
                  maxLength: 255
              additionalProperties: false
              description: A metadata object. Contains one or more metadata key and
                value pairs that are associated with the resource.
            name:
              type:
              - string
              - 'null'
              description: The backup name.
            object_count:
              type: integer
              description: The number of objects in the backup.
            size:
              type: integer
              format: int64
              description: The size of the volume, in gibibytes (GiB).
            snapshot_id:
              type:
              - string
              - 'null'
              format: uuid
              description: The UUID of the source volume snapshot.
            status:
              type: string
              description: The backup status. Refer to Backup statuses table for the
                possible status value.
            updated_at:
              type: string
              format: date-time
              description: The date and time when the resource was updated. The date
                and time stamp format is ISO 8601
            volume_id:
              type: string
              format: uuid
              description: The UUID of the volume.
          required:
          - id
          - name
          - size
          - status
          - volume_id
    AttachmentsDetailResponse:
      type: object
      properties:
        attachments:
          type: array
          items:
            type: object
            properties:
              attach_mode:
                type: string
                description: "The attach mode of attachment, read-only (\u2018ro\u2019\
                  ) or\nread-and-write (\u2018rw\u2019), default is \u2018rw\u2019\
                  ."
                enum:
                - 'null'
                - ro
                - rw
                x-openstack:
                  min-ver: '3.54'
              attached_at:
                type: string
                format: date-time
                description: The time when attachment is attached.
              connecttion_info:
                type: object
                description: The connection info used for server to connect the volume.
              detached_at:
                type: string
                format: date-time
                description: The time when attachment is detached.
              id:
                type: string
                format: uuid
                description: The ID of attachment.
              instance:
                type:
                - string
                - 'null'
                format: uuid
                description: The UUID of the attaching instance.
              volume_id:
                type: string
                format: uuid
                description: 'The UUID of the volume which the attachment belongs

                  to.'
              status:
                type: string
                description: The status of the attachment.
                enum:
                - attached
                - attaching
                - detached
                - reserved
                - error_attaching
                - error_detaching
                - deleted
            required:
            - id
            - instance
            - name
            - status
            - volume_id
    AttachmentsListResponse:
      type: object
      properties:
        attachments:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: The ID of attachment.
              instance:
                type:
                - string
                - 'null'
                format: uuid
                description: The UUID of the attaching instance.
              volume_id:
                type: string
                format: uuid
                description: 'The UUID of the volume which the attachment belongs

                  to.'
              status:
                type: string
                description: The status of the attachment.
                enum:
                - attached
                - attaching
                - detached
                - reserved
                - error_attaching
                - error_detaching
                - deleted
    AttachmentShowResponse:
      type: object
      properties:
        attachment:
          type: object
          properties:
            attach_mode:
              type: string
              description: "The attach mode of attachment, read-only (\u2018ro\u2019\
                ) or read-and-write (\u2018rw\u2019), default is \u2018rw\u2019."
              enum:
              - 'null'
              - ro
              - rw
              x-openstack:
                min-ver: '3.54'
            attached_at:
              type: string
              format: date-time
              description: The time when attachment is attached.
            connecttion_info:
              type: object
              description: The connection info used for server to connect the volume.
            detached_at:
              type: string
              format: date-time
              description: The time when attachment is detached.
            id:
              type: string
              format: uuid
              description: The ID of attachment.
            instance:
              type:
              - string
              - 'null'
              format: uuid
              description: The UUID of the attaching instance.
            volume_id:
              type: string
              format: uuid
              description: The UUID of the volume which the attachment belongs to.
            status:
              type: string
              description: The status of the attachment.
              enum:
              - attached
              - attaching
              - detached
              - reserved
              - error_attaching
              - error_detaching
              - deleted
          required:
          - id
          - instance
          - name
          - status
          - volume_id
    Resource_FiltersListResponse:
      type: object
      properties:
        resource_filters:
          type: array
          items:
            type: object
            properties:
              filters:
                type: array
                description: The resource filter array.
                items:
                  type: string
              resource:
                type: string
                description: Resource which the filters will be applied to.
          description: A collection of resource filters.
    Volume_TransfersDetailResponse:
      type: object
      properties:
        transfers:
          type: array
          items:
            type: object
            properties:
              created_at:
                type: string
                format: date-time
                description: "The date and time when the resource was created.\n\n\
                  The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):\n\
                  \n```\nCCYY-MM-DDThh:mm:ss\xB1hh:mm\n\n```\n\nFor example, `2015-08-27T09:49:58-05:00`.\n\
                  \nThe `\xB1hh:mm` value, if included, is the time zone as an offset\n\
                  from UTC."
              destination_project_id:
                type: string
                format: uuid
                description: 'Records the destination project_id after volume transfer.


                  **New in version 3.57**'
                x-openstack:
                  min-ver: '3.57'
              source_project_id:
                type: string
                format: uuid
                description: 'Records the source project_id before volume transfer.


                  **New in version 3.57**'
                x-openstack:
                  min-ver: '3.57'
              accepted:
                type: boolean
                description: 'Records if this transfer was accepted or not.


                  **New in version 3.57**'
                x-openstack:
                  min-ver: '3.57'
              no_snapshots:
                type: boolean
                description: Transfer volume without snapshots. Defaults to False
                  if not specified.
                x-openstack:
                  min-ver: '3.55'
              id:
                type: string
                format: uuid
                description: The UUID of the object.
              links:
                type: array
                description: Links for the volume transfer.
                items:
                  type: object
                  description: Links to the resources in question. See [API Guide
                    / Links and References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
                    for more info.
                  properties:
                    href:
                      type: string
                      format: uri
                    rel:
                      type: string
              name:
                type:
                - string
                - 'null'
                description: The name of the object.
              volume_id:
                type: string
                format: uuid
                description: The UUID of the volume.
          description: List of transfer details.
    Volume_TransfersListResponse:
      type: object
      properties:
        transfers:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: The UUID of the object.
              links:
                type: array
                description: Links for the volume transfer.
                items:
                  type: object
                  description: Links to the resources in question. See [API Guide
                    / Links and References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
                    for more info.
                  properties:
                    href:
                      type: string
                      format: uri
                    rel:
                      type: string
              name:
                type:
                - string
                - 'null'
                description: The name of the object.
              volume_id:
                type: string
                format: uuid
                description: The UUID of the volume.
    Volume_TransferShowResponse:
      type: object
      properties:
        transfer:
          type: object
          properties:
            created_at:
              type: string
              format: date-time
              description: The date and time when the resource was created.
            destination_project_id:
              type: string
              format: uuid
              description: Records the destination project_id after volume transfer.
              x-openstack:
                min-ver: '3.57'
            source_project_id:
              type: string
              format: uuid
              description: Records the source project_id before volume transfer.
              x-openstack:
                min-ver: '3.57'
            accepted:
              type: boolean
              description: Records if this transfer was accepted or not.
              x-openstack:
                min-ver: '3.57'
            no_snapshots:
              type: boolean
              description: Transfer volume without snapshots. Defaults to False if
                not specified.
              x-openstack:
                min-ver: '3.55'
            id:
              type: string
              format: uuid
              description: The UUID of the volume transfer.
            links:
              type: array
              description: Links to the resources in question. See [API Guide / Links
                and References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
                for more info.
              items:
                type: object
                description: Links to the resources in question. See [API Guide /
                  Links and References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
                  for more info.
                properties:
                  href:
                    type: string
                    format: uri
                  rel:
                    type: string
            name:
              type:
              - string
              - 'null'
              description: The name of the object.
            volume_id:
              type: string
              format: uuid
              description: The UUID of the volume.
    Default_TypeDetailResponse:
      type: object
      properties:
        default_type:
          type: object
          properties:
            project_id:
              type: string
              format: uuid
              description: The UUID of the project.
            volume_type_id:
              type: string
              format: uuid
              description: The UUID for an existing volume type.
    Default_TypesListResponse:
      type: object
      properties:
        default_types:
          type: array
          items:
            type: object
            properties:
              project_id:
                type: string
                format: uuid
                description: The UUID of the project.
              volume_type_id:
                type: string
                format: uuid
                description: The UUID for an existing volume type.
    ExtensionsListResponse:
      type: object
      description: A container with list of extension objects.
      properties:
        extensions:
          type: array
          items:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: "The date and time when the resource was updated.\n\n\
                  The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):\n\
                  \n```\nCCYY-MM-DDThh:mm:ss\xB1hh:mm\n\n```\n\nFor example, `2015-08-27T09:49:58-05:00`.\n\
                  \nThe `\xB1hh:mm` value, if included, is the time zone as an offset\n\
                  from UTC. In the previous example, the offset value is `-05:00`.\n\
                  \nIf the `updated_at` date and time stamp is not set, its value\
                  \ is\n`null`."
              description:
                type: string
                description: The extension description.
              links:
                type: array
                description: Links for the volume transfer.
                items: {}
              alias:
                type: string
                description: "The alias for the extension. For example,\n\u201CFOXNSOX\u201D\
                  , \u201Cos- availability-zone\u201D, \u201Cos-extended-quotas\u201D\
                  , \u201Cos-\nshare-unmanage\u201D or \u201Cos-used-limits.\u201D"
              name:
                type: string
                description: The name of the object.
            additionalProperties: false
            required:
            - updated
            - links
            - alias
            - name
            - description
    Os_Availability_ZoneListResponse:
      type: object
      properties:
        availabilityZoneInfo:
          type: array
          items:
            type: object
            properties:
              zoneName:
                type: string
                description: The availability zone name.
              zoneState:
                type: object
                properties:
                  available:
                    type: boolean
    BackupsExport_RecordResponse:
      type: object
      properties:
        backup-record:
          type: object
          description: An object recording volume backup metadata, including backup_service
            and backup_url.
          properties:
            backup_service:
              type: string
              description: The service used to perform the backup.
            backup_url:
              type: string
              format: uri
              description: An identifier string to locate the backup.
    CapabilityShowResponse:
      type: object
      description: Response of the project_id/capabilities/id:get operation
    CgsnapshotsDetailResponse:
      type: object
      description: Response of the project_id/cgsnapshots/detail:get operation
    CgsnapshotsListResponse:
      type: object
      description: Response of the project_id/cgsnapshots:get operation
    CgsnapshotShowResponse:
      type: object
      description: Response of the project_id/cgsnapshots/id:get operation
    Os_HostsListResponse:
      type: object
      description: A container with list of host objects.
      properties:
        hosts:
          type: array
          items:
            type: object
            description: A host object.
            properties:
              resource:
                type: object
                properties:
                  volume_count:
                    type: string
                    description: Total number of volumes.
                  total_volume_gb:
                    type: string
                    description: The total number of gibibytes (GiB) used.
                  total_snapshot_gb:
                    type: string
                    description: The total number of gibibytes (GiB) used by snapshots.
                  project:
                    type: string
                    description: The Project ID which the host resource belongs to.
                      In the summary resource, the value is (total).
                  host:
                    type: string
                    description: The name of the host that hosts the storage backend,
                      may take the format of host@backend.
                  snapshot_count:
                    type: string
                    description: The total number of snapshots used.
                additionalProperties: false
                required:
                - volume_count
                - total_volume_gb
                - total_snapshot_gb
                - project
                - host
                - snapshot_count
            additionalProperties: false
            required:
            - resource
    Os_HostShowResponse:
      type: object
      properties:
        host:
          type: array
          items:
            type: object
            description: A host object.
            properties:
              resource:
                type: object
                properties:
                  volume_count:
                    type: string
                    description: Total number of volumes.
                  total_volume_gb:
                    type: string
                    description: The total number of gibibytes (GiB) used.
                  total_snapshot_gb:
                    type: string
                    description: The total number of gibibytes (GiB) used by snapshots.
                  project:
                    type: string
                    description: The Project ID which the host resource belongs to.
                      In the summary resource, the value is (total).
                  host:
                    type: string
                    description: The name of the host that hosts the storage backend,
                      may take the format of host@backend.
                  snapshot_count:
                    type: string
                    description: The total number of snapshots used.
                additionalProperties: false
                required:
                - volume_count
                - total_volume_gb
                - total_snapshot_gb
                - project
                - host
                - snapshot_count
            additionalProperties: false
            required:
            - resource
    Qos_SpecsListResponse:
      type: object
      properties:
        qos_specs:
          type: array
          items:
            type: object
            properties:
              consumer:
                type: string
                description: The consumer type.
              specs:
                type: object
                description: A `specs` object.
                patternProperties:
                  ^[a-zA-Z0-9-_:. /]{1,255}$:
                    type:
                    - string
                    - 'null'
                    maxLength: 255
                additionalProperties: false
              id:
                type: string
                format: uuid
                description: The generated ID for the QoS specification.
              name:
                type: string
                description: The name of the QoS specification.
          description: A `qos_specs` object.
    Qos_SpecsAssociationsResponse:
      type: object
      properties:
        qos_associations:
          type: array
          items:
            type: object
            properties:
              association_type:
                type: string
                description: The QoS association type.
              id:
                type: string
                format: uuid
                description: The Qos association ID.
              name:
                type: string
                description: The QoS association name.
            additionalProperties: false
            required:
            - association_type
            - id
            - name
    Qos_SpecShowResponse:
      type: object
      properties:
        qos_specs:
          type: object
          properties:
            consumer:
              type: string
              description: The consumer type.
            specs:
              type: object
              description: A specs object.
              patternProperties:
                ^[a-zA-Z0-9-_:. /]{1,255}$:
                  type:
                  - string
                  - 'null'
                  maxLength: 255
              additionalProperties: false
            id:
              type: string
              format: uuid
              description: The generated ID for the QoS specification.
            name:
              type: string
              description: The name of the QoS specification.
    Os_Quota_Class_SetShowResponse:
      type: object
      description: Response of the project_id/os-quota-class-sets/id:get operation
    Os_Quota_SetsDefaultsResponse:
      type: object
      description: Response of the project_id/os-quota-sets/id/defaults:get operation
    Os_Quota_SetShowResponse:
      type: object
      description: Response of the project_id/os-quota-sets/id:get operation
    Scheduler_StatsGet_PoolsResponse:
      type: object
      description: Response of the project_id/scheduler-stats/get_pools:get operation
    Os_ServicesListResponse:
      type: object
      description: Response of the project_id/os-services:get operation
    Os_Snapshot_ManageDetailResponse:
      type: object
      description: Response of the project_id/os-snapshot-manage/detail:get operation
    Os_Snapshot_ManageListResponse:
      type: object
      description: Response of the project_id/os-snapshot-manage:get operation
    TypesExtra_SpecsListResponse:
      type: object
      properties:
        extra_specs:
          description: A key and value pair that contains additional specifications
            that are associated with the volume type. Examples include capabilities,
            capacity, compression, and so on, depending on the storage driver in use.
          type: object
          patternProperties:
            ^[a-zA-Z0-9-_:.]{1,255}$:
              type:
              - string
              - 'null'
              minLength: 0
              maxLength: 255
          additionalProperties: false
    TypesExtra_SpecShowResponse:
      type: object
      additionalProperties: false
      patternProperties:
        ^[a-zA-Z0-9-_:.]{1,255}$:
          type:
          - string
          - 'null'
          minLength: 0
          maxLength: 255
    VolumesEncryptionListResponse:
      type: object
      description: Response of the project_id/volumes/volume_id/encryption:get operation
    VolumesEncryptionShowResponse:
      type: object
      description: Response of the project_id/volumes/volume_id/encryption/id:get
        operation
    Os_Volume_ManageDetailResponse:
      type: object
      description: Response of the project_id/os-volume-manage/detail:get operation
    Os_Volume_ManageListResponse:
      type: object
      description: Response of the project_id/os-volume-manage:get operation
    Os_Volume_TransferDetailResponse:
      type: object
      properties:
        transfers:
          type: array
          items:
            type: object
            properties:
              created_at:
                type: string
                format: date-time
                description: "The date and time when the resource was created.\n\n\
                  The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):\n\
                  \n```\nCCYY-MM-DDThh:mm:ss\xB1hh:mm\n\n```\n\nFor example, `2015-08-27T09:49:58-05:00`.\n\
                  \nThe `\xB1hh:mm` value, if included, is the time zone as an offset\n\
                  from UTC."
              id:
                type: string
                format: uuid
                description: The UUID of the volume transfer.
              links:
                type: array
                description: Links for the volume transfer.
                items:
                  type: object
                  description: Links to the resources in question. See [API Guide
                    / Links and References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
                    for more info.
                  properties:
                    href:
                      type: string
                      format: uri
                    rel:
                      type: string
              name:
                type:
                - string
                - 'null'
                description: The name of the object.
              volume_id:
                type: string
                format: uuid
                description: The UUID of the volume.
          description: List of transfer details.
    Os_Volume_TransferListResponse:
      type: object
      properties:
        transfers:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: The UUID of the volume transfer.
              links:
                type: array
                description: Links for the volume transfer.
                items:
                  type: object
                  description: Links to the resources in question. See [API Guide
                    / Links and References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
                    for more info.
                  properties:
                    href:
                      type: string
                      format: uri
                    rel:
                      type: string
              name:
                type:
                - string
                - 'null'
                description: The name of the object.
              volume_id:
                type: string
                format: uuid
                description: The UUID of the volume.
    Os_Volume_TransferShowResponse:
      type: object
      properties:
        transfer:
          type: object
          properties:
            created_at:
              type: string
              format: date-time
              description: The date and time when the resource was created.
            id:
              type: string
              format: uuid
              description: The UUID of the volume transfer.
            links:
              type: array
              description: Links to the resources in question. See [API Guide / Links
                and References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
                for more info.
              items:
                type: object
                description: Links to the resources in question. See [API Guide /
                  Links and References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
                  for more info.
                properties:
                  href:
                    type: string
                    format: uri
                  rel:
                    type: string
            name:
              type:
              - string
              - 'null'
              description: The name of the object.
            volume_id:
              type: string
              format: uuid
              description: The UUID of the volume.
    TypesOs_Volume_Type_AccessListResponse:
      type: object
      properties:
        volume_type_access:
          type: array
          items:
            type: object
            properties:
              project_id:
                type: string
                format: uuid
                description: The UUID of the project.
              volume_type_id:
                type: string
                format: uuid
                description: The UUID of the volume type.
    TypesEncryptionListResponse:
      type: object
      properties:
        cipher:
          type: string
          description: The encryption algorithm or mode. For example, aes-xts-plain64.
            The default value is None.
        control_location:
          type: string
          enum:
          - front-end
          - back-end
          description: "Notional service where encryption is performed. Valid values\
            \ are \u201Cfront-end\u201D or \u201Cback-end\u201D. The default value\
            \ is \u201Cfront-end\u201D."
        created_at:
          type: string
          format: date-time
          description: The date and time when the resource was created.
        deleted:
          type: boolean
          description: The resource is deleted or not.
        deleted_at:
          type:
          - string
          - 'null'
          format: date-time
          description: The date and time when the resource was deleted.
        encryption_id:
          type: string
          format: uuid
          description: The UUID of the encryption.
        key_size:
          type: integer
          description: Size of encryption key, in bits. This is usually 256. The default
            value is None.
        provider:
          type: string
          description: The class that provides encryption support.
        updated_at:
          type:
          - string
          - 'null'
          format: date-time
          description: The date and time when the resource was updated.
    TypesEncryptionShowResponse:
      type: object
      properties:
        cipher:
          type: string
          description: The encryption algorithm or mode. For example, aes-xts-plain64.
            The default value is None.
  parameters:
    volumes_detail_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/volumes/detail API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    all_tenants:
      in: query
      name: all_tenants
      description: Shows details for all project. Admin only.
      schema:
        type: boolean
    sort:
      in: query
      name: sort
      description: 'Comma-separated list of sort keys and optional sort directions
        in the form of < key > [: < direction > ]. A valid direction is asc (ascending)
        or desc (descending).'
      schema:
        type: string
    sort_key:
      in: query
      name: sort_key
      description: Sorts by an attribute. A valid value is name, status, container_format,
        disk_format, size, id, created_at, or updated_at. Default is created_at. The
        API uses the natural sorting direction of the sort_key attribute value. Deprecated
        in favour of the combined sort parameter.
      schema:
        type: string
    sort_dir:
      in: query
      name: sort_dir
      description: Sorts by one or more sets of attribute and sort direction combinations.
        If you omit the sort direction in a set, default is desc. Deprecated in favour
        of the combined sort parameter.
      schema:
        type: string
        enum:
        - asc
        - desc
    limit:
      in: query
      name: limit
      description: Requests a page size of items. Returns a number of items up to
        a limit value. Use the limit parameter to make an initial limited request
        and use the ID of the last-seen item from the response as the marker parameter
        value in a subsequent limited request.
      schema:
        type: integer
        minimum: 1
    offset:
      in: query
      name: offset
      description: Used in conjunction with limit to return a slice of items. offset
        is where to start in the list.
      schema:
        type: integer
    marker:
      in: query
      name: marker
      description: The ID of the last-seen item. Use the limit parameter to make an
        initial limited request and use the ID of the last-seen item from the response
        as the marker parameter value in a subsequent limited request.
      schema:
        type: string
        format: uuid
    with_count:
      in: query
      name: with_count
      description: Whether to show count in API response or not, default is False.
      schema:
        type: boolean
      x-openstack:
        min-ver: '3.45'
    created_at:
      in: query
      name: created_at
      description: 'Filters reuslts by a time that resources are created at with time
        comparison operators: gt/gte/eq/neq/lt/lte.'
      schema:
        type: string
        format: date-time
      x-openstack:
        min-ver: '3.60'
    updated_at:
      in: query
      name: updated_at
      description: 'Filters reuslts by a time that resources are updated at with time
        comparison operators: gt/gte/eq/neq/lt/lte.'
      schema:
        type: string
        format: date-time
      x-openstack:
        min-ver: '3.60'
    consumes_quota:
      in: query
      name: consumes_quota
      description: "Filters results by consumes_quota field. Resources that don\u2019\
        t use quotas are usually temporary internal resources created to perform an\
        \ operation. Default is to not filter by it. Filtering by this option may\
        \ not be always possible in a cloud, see List Resource Filters to determine\
        \ whether this filter is available in your cloud."
      schema:
        type: boolean
      x-openstack:
        min-ver: '3.65'
    volumes_summary_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/volumes/summary API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    volumes_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/volumes/{id} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    volumes_id:
      in: path
      name: id
      description: id parameter for /v3/volumes/{id} API
      schema:
        type: string
      required: true
    messages_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/messages/{id} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    messages_id:
      in: path
      name: id
      description: id parameter for /v3/messages/{id} API
      schema:
        type: string
      required: true
    clusters_detail_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/clusters/detail API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    cluster_frozen:
      in: query
      name: frozen
      description: Whether the cluster is frozen or not.
      schema:
        type: boolean
      x-openstack:
        min-ver: '3.26'
    cluster_active_backend_id:
      in: query
      name: active_backend_id
      description: The ID of active storage backend. Only in cinder-volume service.
      schema:
        type: string
      x-openstack:
        min-ver: '3.26'
    cluster_name:
      in: query
      name: name
      description: Filter the cluster list result by cluster name.
      schema:
        type: string
    cluster_binary:
      in: query
      name: binary
      description: Filter the cluster list result by binary name of the clustered
        services. One of cinder-api, cinder-scheduler, cinder-volume or cinder-backup.
      schema:
        type: string
        enum:
        - cinder-api
        - cinder-scheduler
        - cinder-volume
        - cinder-backup
    cluster_is_up:
      in: query
      name: is_up
      description: Filter the cluster list result by state.
      schema:
        type: boolean
    cluster_disabled:
      in: query
      name: disabled
      description: Filter the cluster list result by status.
      schema:
        type: boolean
    cluster_num_hosts:
      in: query
      name: num_hosts
      description: Filter the cluster list result by number of hosts.
      schema:
        type: number
    cluster_num_down_hosts:
      in: query
      name: num_down_hosts
      description: Filter the cluster list result by number of down hosts.
      schema:
        type: number
    cluster_replication_status:
      in: query
      name: replication_stats
      description: Filter the cluster list result by replication status.
      schema:
        type: string
        enum:
        - enabled
        - disabled
    clusters_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/clusters/{id} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    clusters_id:
      in: path
      name: id
      description: id parameter for /v3/clusters/{id} API
      schema:
        type: string
      required: true
    types_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/types/{id} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    type_is_public:
      in: query
      name: is_public
      description: Filter the volume type by public visibility.
      schema:
        type: boolean
    type_sort:
      in: query
      name: sort
      description: 'Comma-separated list of sort keys and optional sort directions
        in the form of < key > [: < direction > ]. A valid direction is asc (ascending)
        or desc (descending).'
      schema:
        type: string
    type_sort_key:
      in: query
      name: sort_key
      description: Sorts by an attribute. A valid value is name, status, container_format,
        disk_format, size, id, created_at, or updated_at. Default is created_at. The
        API uses the natural sorting direction of the sort_key attribute value. Deprecated
        in favour of the combined sort parameter.
      schema:
        type: string
    type_sort_dir:
      in: query
      name: sort_dir
      description: Sorts by one or more sets of attribute and sort direction combinations.
        If you omit the sort direction in a set, default is desc. Deprecated in favour
        of the combined sort parameter.
      schema:
        type: string
    type_limit:
      in: query
      name: limit
      description: Requests a page size of items. Returns a number of items up to
        a limit value. Use the limit parameter to make an initial limited request
        and use the ID of the last-seen item from the response as the marker parameter
        value in a subsequent limited request.
      schema:
        type: integer
    type_marker:
      in: query
      name: marker
      description: The ID of the last-seen item. Use the limit parameter to make an
        initial limited request and use the ID of the last-seen item from the response
        as the marker parameter value in a subsequent limited request.
      schema:
        type: string
    type_offset:
      in: query
      name: offset
      description: Used in conjunction with limit to return a slice of items. offset
        is where to start in the list.
      schema:
        type: integer
    types_id:
      in: path
      name: id
      description: id parameter for /v3/types/{id} API
      schema:
        type: string
      required: true
    group_types_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/group_types/{id} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    group_all_tenants:
      in: query
      name: all_tenants
      description: Shows details for all project. Admin only.
      schema:
        type: boolean
    group_sort:
      in: query
      name: sort
      description: 'Comma-separated list of sort keys and optional sort directions
        in the form of < key > [: < direction > ]. A valid direction is asc (ascending)
        or desc (descending).'
      schema:
        type: string
    group_sort_key:
      in: query
      name: sort_key
      description: Sorts by an attribute. A valid value is name, status, container_format,
        disk_format, size, id, created_at, or updated_at. Default is created_at. The
        API uses the natural sorting direction of the sort_key attribute value. Deprecated
        in favour of the combined sort parameter.
      schema:
        type: string
    group_sort_dir:
      in: query
      name: sort_dir
      description: Sorts by one or more sets of attribute and sort direction combinations.
        If you omit the sort direction in a set, default is desc. Deprecated in favour
        of the combined sort parameter.
      schema:
        type: string
    group_limit:
      in: query
      name: limit
      description: Requests a page size of items. Returns a number of items up to
        a limit value. Use the limit parameter to make an initial limited request
        and use the ID of the last-seen item from the response as the marker parameter
        value in a subsequent limited request.
      schema:
        type: integer
    group_marker:
      in: query
      name: marker
      description: The ID of the last-seen item. Use the limit parameter to make an
        initial limited request and use the ID of the last-seen item from the response
        as the marker parameter value in a subsequent limited request.
      schema:
        type: string
    group_offset:
      in: query
      name: offset
      description: Used in conjunction with limit to return a slice of items. offset
        is where to start in the list.
      schema:
        type: integer
    group_types_id:
      in: path
      name: id
      description: id parameter for /v3/group_types/{id} API
      schema:
        type: string
      required: true
    group_types_group_specs_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/group_types/{group_type_id}/group_specs/{id}
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    group_types_group_specs_group_type_id:
      in: path
      name: group_type_id
      description: group_type_id parameter for /v3/group_types/{group_type_id}/group_specs/{id}
        API
      schema:
        type: string
      required: true
    group_types_group_specs_id:
      in: path
      name: id
      description: id parameter for /v3/group_types/{group_type_id}/group_specs/{id}
        API
      schema:
        type: string
      required: true
    groups_detail_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/groups/detail API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    groups_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/groups/{id} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    groups_id:
      in: path
      name: id
      description: id parameter for /v3/groups/{id} API
      schema:
        type: string
      required: true
    group_snapshots_detail_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/group_snapshots/detail
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    group_snapshots_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/group_snapshots/{id}
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    group_snapshots_id:
      in: path
      name: id
      description: id parameter for /v3/group_snapshots/{id} API
      schema:
        type: string
      required: true
    snapshots_detail_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/snapshots/detail API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    snapshots_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/snapshots/{id} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    snapshots_id:
      in: path
      name: id
      description: id parameter for /v3/snapshots/{id} API
      schema:
        type: string
      required: true
    limits_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/limits/{id} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    snapshots_metadata_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/snapshots/{snapshot_id}/metadata
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    snapshots_metadata_snapshot_id:
      in: path
      name: snapshot_id
      description: snapshot_id parameter for /v3/snapshots/{snapshot_id}/metadata
        API
      schema:
        type: string
      required: true
    snapshots_metadata_id:
      in: path
      name: id
      description: id parameter for /v3/snapshots/{snapshot_id}/metadata/{id} API
      schema:
        type: string
      required: true
    volumes_metadata_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/volumes/{volume_id}/metadata
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    volumes_metadata_volume_id:
      in: path
      name: volume_id
      description: volume_id parameter for /v3/volumes/{volume_id}/metadata API
      schema:
        type: string
      required: true
    volumes_metadata_id:
      in: path
      name: id
      description: id parameter for /v3/volumes/{volume_id}/metadata/{id} API
      schema:
        type: string
      required: true
    consistencygroups_detail_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/consistencygroups/detail
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    consistencygroups_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/consistencygroups/{id}
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    consistencygroups_id:
      in: path
      name: id
      description: id parameter for /v3/consistencygroups/{id} API
      schema:
        type: string
      required: true
    manageable_volumes_detail_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/manageable_volumes/detail
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    manageable_volumes_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/manageable_volumes/{id}
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    manageable_snapshots_detail_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/manageable_snapshots/detail
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    manageable_snapshots_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/manageable_snapshots/{id}
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    backups_detail_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/backups/detail API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    backup_all_tenants:
      in: query
      name: all_tenants
      description: Shows details for all project. Admin only.
      schema:
        type: boolean
    backup_with_count:
      in: query
      name: with_count
      description: Whether to show count in API response or not, default is False.
      schema:
        type: boolean
      x-openstack:
        min-ver: '3.45'
    backup_sort:
      in: query
      name: sort
      description: 'Comma-separated list of sort keys and optional sort directions
        in the form of < key > [: < direction > ]. A valid direction is asc (ascending)
        or desc (descending).'
      schema:
        type: string
    backup_sort_key:
      in: query
      name: sort_key
      description: Sorts by an attribute. A valid value is name, status, container_format,
        disk_format, size, id, created_at, or updated_at. Default is created_at. The
        API uses the natural sorting direction of the sort_key attribute value. Deprecated
        in favour of the combined sort parameter.
      schema:
        type: string
    backup_sort_dir:
      in: query
      name: sort_dir
      description: Sorts by one or more sets of attribute and sort direction combinations.
        If you omit the sort direction in a set, default is desc. Deprecated in favour
        of the combined sort parameter.
      schema:
        type: string
    backup_limit:
      in: query
      name: limit
      description: Requests a page size of items. Returns a number of items up to
        a limit value. Use the limit parameter to make an initial limited request
        and use the ID of the last-seen item from the response as the marker parameter
        value in a subsequent limited request.
      schema:
        type: integer
    backup_marker:
      in: query
      name: marker
      description: The ID of the last-seen item. Use the limit parameter to make an
        initial limited request and use the ID of the last-seen item from the response
        as the marker parameter value in a subsequent limited request.
      schema:
        type: string
    backup_offset:
      in: query
      name: offset
      description: Used in conjunction with limit to return a slice of items. offset
        is where to start in the list.
      schema:
        type: integer
    backups_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/backups/{id} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    backups_id:
      in: path
      name: id
      description: id parameter for /v3/backups/{id} API
      schema:
        type: string
      required: true
    attachments_detail_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/attachments/detail API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    attachments_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/attachments/{id} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    attachments_id:
      in: path
      name: id
      description: id parameter for /v3/attachments/{id} API
      schema:
        type: string
      required: true
    resource_filters_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/resource_filters/{id}
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    volume_transfers_detail_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/volume-transfers/detail
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    transfer_is_public:
      in: query
      name: is_public
      description: Filter the volume transfer by public visibility.
      schema:
        type: boolean
    transfer_all_tenants:
      in: query
      name: all_tenants
      description: Shows details for all project. Admin only.
      schema:
        type: boolean
    transfer_sort:
      in: query
      name: sort
      description: 'Comma-separated list of sort keys and optional sort directions
        in the form of < key > [: < direction > ]. A valid direction is asc (ascending)
        or desc (descending).'
      schema:
        type: string
    transfer_sort_key:
      in: query
      name: sort_key
      description: Sorts by an attribute. A valid value is name, status, container_format,
        disk_format, size, id, created_at, or updated_at. Default is created_at. The
        API uses the natural sorting direction of the sort_key attribute value. Deprecated
        in favour of the combined sort parameter.
      schema:
        type: string
    transfer_sort_dir:
      in: query
      name: sort_dir
      description: Sorts by one or more sets of attribute and sort direction combinations.
        If you omit the sort direction in a set, default is desc. Deprecated in favour
        of the combined sort parameter.
      schema:
        type: string
    transfer_limit:
      in: query
      name: limit
      description: Requests a page size of items. Returns a number of items up to
        a limit value. Use the limit parameter to make an initial limited request
        and use the ID of the last-seen item from the response as the marker parameter
        value in a subsequent limited request.
      schema:
        type: integer
    transfer_marker:
      in: query
      name: marker
      description: The ID of the last-seen item. Use the limit parameter to make an
        initial limited request and use the ID of the last-seen item from the response
        as the marker parameter value in a subsequent limited request.
      schema:
        type: string
    transfer_offset:
      in: query
      name: offset
      description: Used in conjunction with limit to return a slice of items. offset
        is where to start in the list.
      schema:
        type: integer
    volume_transfers_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/volume-transfers/{id}
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    volume_transfers_id:
      in: path
      name: id
      description: id parameter for /v3/volume-transfers/{id} API
      schema:
        type: string
      required: true
    default_types_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/default-types/{id} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    default_types_id:
      in: path
      name: id
      description: id parameter for /v3/default-types/{id} API
      schema:
        type: string
      required: true
    extensions_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/extensions API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    os_availability_zone_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/os-availability-zone/{id}
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    backups_export_record_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/backups/{id}/export_record
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    backups_export_record_id:
      in: path
      name: id
      description: id parameter for /v3/backups/{id}/export_record API
      schema:
        type: string
      required: true
    capabilities_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/capabilities/{id} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    capabilities_id:
      in: path
      name: id
      description: id parameter for /v3/capabilities/{id} API
      schema:
        type: string
      required: true
    cgsnapshots_detail_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/cgsnapshots/detail API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    cgsnapshots_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/cgsnapshots/{id} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    cgsnapshots_id:
      in: path
      name: id
      description: id parameter for /v3/cgsnapshots/{id} API
      schema:
        type: string
      required: true
    os_hosts_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/os-hosts/{id} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    os_hosts_id:
      in: path
      name: id
      description: id parameter for /v3/os-hosts/{id} API
      schema:
        type: string
      required: true
    qos_specs_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/qos-specs/{id} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    qos_spec_sort:
      in: query
      name: sort
      description: 'Comma-separated list of sort keys and optional sort directions
        in the form of < key > [: < direction > ]. A valid direction is asc (ascending)
        or desc (descending).'
      schema:
        type: string
    qos_spec_sort_key:
      in: query
      name: sort_key
      description: Sorts by an attribute. A valid value is name, status, container_format,
        disk_format, size, id, created_at, or updated_at. Default is created_at. The
        API uses the natural sorting direction of the sort_key attribute value. Deprecated
        in favour of the combined sort parameter.
      schema:
        type: string
    qos_spec_sort_dir:
      in: query
      name: sort_dir
      description: Sorts by one or more sets of attribute and sort direction combinations.
        If you omit the sort direction in a set, default is desc. Deprecated in favour
        of the combined sort parameter.
      schema:
        type: string
    qos_spec_limit:
      in: query
      name: limit
      description: Requests a page size of items. Returns a number of items up to
        a limit value. Use the limit parameter to make an initial limited request
        and use the ID of the last-seen item from the response as the marker parameter
        value in a subsequent limited request.
      schema:
        type: integer
    qos_spec_marker:
      in: query
      name: marker
      description: The ID of the last-seen item. Use the limit parameter to make an
        initial limited request and use the ID of the last-seen item from the response
        as the marker parameter value in a subsequent limited request.
      schema:
        type: string
    qos_spec_offset:
      in: query
      name: offset
      description: Used in conjunction with limit to return a slice of items. offset
        is where to start in the list.
      schema:
        type: integer
    qos_specs_associations_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/qos-specs/{id}/associations
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    qos_specs_associations_id:
      in: path
      name: id
      description: id parameter for /v3/qos-specs/{id}/associations API
      schema:
        type: string
      required: true
    qos_specs_associate_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/qos-specs/{id}/associate
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    qos_specs_associate_id:
      in: path
      name: id
      description: id parameter for /v3/qos-specs/{id}/associate API
      schema:
        type: string
      required: true
    qos_specs_disassociate_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/qos-specs/{id}/disassociate
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    qos_specs_disassociate_id:
      in: path
      name: id
      description: id parameter for /v3/qos-specs/{id}/disassociate API
      schema:
        type: string
      required: true
    qos_specs_disassociate_all_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/qos-specs/{id}/disassociate_all
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    qos_specs_disassociate_all_id:
      in: path
      name: id
      description: id parameter for /v3/qos-specs/{id}/disassociate_all API
      schema:
        type: string
      required: true
    qos_specs_id:
      in: path
      name: id
      description: id parameter for /v3/qos-specs/{id} API
      schema:
        type: string
      required: true
    os_quota_class_sets_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/os-quota-class-sets/{id}
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    os_quota_class_sets_id:
      in: path
      name: id
      description: id parameter for /v3/os-quota-class-sets/{id} API
      schema:
        type: string
      required: true
    os_quota_sets_defaults_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/os-quota-sets/{id}/defaults
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    os_quota_sets_defaults_id:
      in: path
      name: id
      description: id parameter for /v3/os-quota-sets/{id}/defaults API
      schema:
        type: string
      required: true
    os_quota_sets_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/os-quota-sets/{id} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    os_quota_sets_id:
      in: path
      name: id
      description: id parameter for /v3/os-quota-sets/{id} API
      schema:
        type: string
      required: true
    scheduler_stats_get_pools_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/scheduler-stats/get_pools
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    os_services_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/os-services/{id} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    os_snapshot_manage_detail_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/os-snapshot-manage/detail
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    os_snapshot_manage_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/os-snapshot-manage/{id}
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    types_extra_specs_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/types/{type_id}/extra_specs/{id}
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    types_extra_specs_type_id:
      in: path
      name: type_id
      description: type_id parameter for /v3/types/{type_id}/extra_specs/{id} API
      schema:
        type: string
      required: true
    types_extra_specs_id:
      in: path
      name: id
      description: id parameter for /v3/types/{type_id}/extra_specs/{id} API
      schema:
        type: string
      required: true
    volumes_encryption_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/volumes/{volume_id}/encryption/{id}
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    volumes_encryption_volume_id:
      in: path
      name: volume_id
      description: volume_id parameter for /v3/volumes/{volume_id}/encryption/{id}
        API
      schema:
        type: string
      required: true
    volumes_encryption_id:
      in: path
      name: id
      description: id parameter for /v3/volumes/{volume_id}/encryption/{id} API
      schema:
        type: string
      required: true
    os_volume_manage_detail_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/os-volume-manage/detail
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    os_volume_manage_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/os-volume-manage/{id}
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    os_volume_transfer_detail_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/os-volume-transfer/detail
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    os_volume_transfer_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/os-volume-transfer/{id}
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    os_volume_transfer_id:
      in: path
      name: id
      description: id parameter for /v3/os-volume-transfer/{id} API
      schema:
        type: string
      required: true
    types_os_volume_type_access_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/types/{type_id}/os-volume-type-access/{id}
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    types_os_volume_type_access_type_id:
      in: path
      name: type_id
      description: type_id parameter for /v3/types/{type_id}/os-volume-type-access/{id}
        API
      schema:
        type: string
      required: true
    types_encryption_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/types/{type_id}/encryption/{id}
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    types_encryption_type_id:
      in: path
      name: type_id
      description: type_id parameter for /v3/types/{type_id}/encryption/{id} API
      schema:
        type: string
      required: true
    types_encryption_id:
      in: path
      name: id
      description: id parameter for /v3/types/{type_id}/encryption/{id} API
      schema:
        type: string
      required: true
