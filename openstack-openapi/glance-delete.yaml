openapi: 3.1.0
info:
  title: OpenStack Image API
  description: Image API provided by Glance service
  version: '2.16'
paths:
  /v2/metadefs/namespaces/{namespace_name}/resource_types/{resource_type}:
    parameters:
    - $ref: '#/components/parameters/metadefs_namespaces_resource_types_namespace_name'
    - $ref: '#/components/parameters/metadefs_namespaces_resource_types_resource_type'
    delete:
      operationId: metadefs/namespaces/namespace_name/resource_types/resource_type:delete
      responses:
        '204':
          description: Ok
      tags:
      - metadata-definition-resource-types
  /v2/metadefs/namespaces/{namespace_name}:
    parameters:
    - $ref: '#/components/parameters/metadefs_namespaces_namespace_name'
    delete:
      operationId: metadefs/namespaces/namespace_name:delete
      responses:
        '204':
          description: Ok
      tags:
      - metadata-definition-namespaces
  /v2/metadefs/namespaces/{namespace_name}/properties:
    parameters:
    - $ref: '#/components/parameters/metadefs_namespaces_properties_namespace_name'
    delete:
      operationId: metadefs/namespaces/namespace_name/properties:delete
      responses:
        '204':
          description: Ok
      tags:
      - metadata-definition-properties
  /v2/metadefs/namespaces/{namespace_name}/properties/{property_name}:
    parameters:
    - $ref: '#/components/parameters/metadefs_namespaces_properties_namespace_name'
    - $ref: '#/components/parameters/metadefs_namespaces_properties_property_name'
    delete:
      operationId: metadefs/namespaces/namespace_name/properties/property_name:delete
      responses:
        '204':
          description: Ok
      tags:
      - metadata-definition-properties
  /v2/metadefs/namespaces/{namespace_name}/objects:
    parameters:
    - $ref: '#/components/parameters/metadefs_namespaces_objects_namespace_name'
    delete:
      operationId: metadefs/namespaces/namespace_name/objects:delete
      responses:
        '204':
          description: Ok
      tags:
      - metadata-definition-objects
  /v2/metadefs/namespaces/{namespace_name}/objects/{object_name}:
    parameters:
    - $ref: '#/components/parameters/metadefs_namespaces_objects_namespace_name'
    - $ref: '#/components/parameters/metadefs_namespaces_objects_object_name'
    delete:
      operationId: metadefs/namespaces/namespace_name/objects/object_name:delete
      responses:
        '204':
          description: Ok
      tags:
      - metadata-definition-objects
  /v2/metadefs/namespaces/{namespace_name}/tags:
    parameters:
    - $ref: '#/components/parameters/metadefs_namespaces_tags_namespace_name'
    delete:
      operationId: metadefs/namespaces/namespace_name/tags:delete
      responses:
        '204':
          description: Ok
      tags:
      - metadata-definition-tags
  /v2/metadefs/namespaces/{namespace_name}/tags/{tag_name}:
    parameters:
    - $ref: '#/components/parameters/metadefs_namespaces_tags_namespace_name'
    - $ref: '#/components/parameters/metadefs_namespaces_tags_tag_name'
    delete:
      operationId: metadefs/namespaces/namespace_name/tags/tag_name:delete
      responses:
        '204':
          description: Ok
      tags:
      - metadata-definition-tags
  /v2/images/{image_id}:
    parameters:
    - $ref: '#/components/parameters/images_image_id'
    delete:
      description: '(Since Image API v2.0) Deletes an image.


        You cannot delete images with the `protected` attribute set to

        `true` (boolean).


        Preconditions


        Synchronous Postconditions


        Normal response codes: 204


        Error response codes: 400, 401, 403, 404, 409'
      operationId: images/image_id:delete
      responses:
        '204':
          description: Ok
      tags:
      - images
      summary: Delete image
  /v2/stores/{store_id}/{image_id}:
    parameters:
    - $ref: '#/components/parameters/stores_store_id'
    - $ref: '#/components/parameters/stores_image_id'
    delete:
      description: 'This API allows you to delete a copy of the image from a specific
        store.

        *(Since Image API v2.10)*


        Normal response codes: 204


        Error response codes: 400, 401, 403, 404, 409'
      operationId: stores/store_id/image_id:delete
      responses:
        '204':
          description: Ok
      tags:
      - stores
      summary: Delete image from store
  /v2/images/{image_id}/tags/{tag_value}:
    parameters:
    - $ref: '#/components/parameters/images_tags_image_id'
    - $ref: '#/components/parameters/images_tags_tag_value'
    delete:
      operationId: images/image_id/tags/tag_value:delete
      responses:
        '204':
          description: Ok
      tags:
      - images
  /v2/images/{image_id}/members/{member_id}:
    parameters:
    - $ref: '#/components/parameters/images_members_image_id'
    - $ref: '#/components/parameters/images_members_member_id'
    delete:
      description: 'Deletes a tenant ID from the member list of an image.

        *(Since Image API v2.1)*


        Preconditions


        Synchronous Postconditions


        Troubleshooting


        Normal response codes: 204


        Error response codes: 400, 401, 403, 404'
      operationId: images/image_id/members/member_id:delete
      responses:
        '204':
          description: Ok
      tags:
      - images
      summary: Delete image member
  /v2/tasks/{task_id}:
    parameters:
    - $ref: '#/components/parameters/tasks_task_id'
    delete:
      operationId: tasks/task_id:delete
      responses:
        '204':
          description: Ok
      tags:
      - tasks
  /v2/cache:
    delete:
      description: 'Clears the cache and its queue.

        *(Since Image API v2.14)*


        Normal response codes: 204


        Error response codes: 400, 401, 403'
      operationId: cache:delete
      responses:
        '204':
          description: Ok
      tags:
      - cache
      summary: Clear images from cache
  /v2/cache/{image_id}:
    parameters:
    - $ref: '#/components/parameters/cache_image_id'
    delete:
      description: 'Deletes a image from cache.

        *(Since Image API v2.14)*


        Normal response codes: 204


        Error response codes: 400, 401, 403, 404'
      operationId: cache/image_id:delete
      responses:
        '204':
          description: Ok
      tags:
      - cache
      summary: Delete image from cache
components:
  schemas: {}
  parameters:
    metadefs_namespaces_resource_types_namespace_name:
      in: path
      name: namespace_name
      description: namespace_name parameter for /v2/metadefs/namespaces/{namespace_name}/resource_types/{resource_type}
        API
      schema:
        type: string
      required: true
    metadefs_namespaces_resource_types_resource_type:
      in: path
      name: resource_type
      description: resource_type parameter for /v2/metadefs/namespaces/{namespace_name}/resource_types/{resource_type}
        API
      schema:
        type: string
      required: true
    metadefs_namespaces_namespace_name:
      in: path
      name: namespace_name
      description: namespace_name parameter for /v2/metadefs/namespaces/{namespace_name}
        API
      schema:
        type: string
      required: true
    metadefs_namespaces_properties_namespace_name:
      in: path
      name: namespace_name
      description: namespace_name parameter for /v2/metadefs/namespaces/{namespace_name}/properties/{property_name}
        API
      schema:
        type: string
      required: true
    metadefs_namespaces_properties_property_name:
      in: path
      name: property_name
      description: property_name parameter for /v2/metadefs/namespaces/{namespace_name}/properties/{property_name}
        API
      schema:
        type: string
      required: true
    metadefs_namespaces_objects_namespace_name:
      in: path
      name: namespace_name
      description: namespace_name parameter for /v2/metadefs/namespaces/{namespace_name}/objects/{object_name}
        API
      schema:
        type: string
      required: true
    metadefs_namespaces_objects_object_name:
      in: path
      name: object_name
      description: object_name parameter for /v2/metadefs/namespaces/{namespace_name}/objects/{object_name}
        API
      schema:
        type: string
      required: true
    metadefs_namespaces_tags_namespace_name:
      in: path
      name: namespace_name
      description: namespace_name parameter for /v2/metadefs/namespaces/{namespace_name}/tags/{tag_name}
        API
      schema:
        type: string
      required: true
    metadefs_namespaces_tags_tag_name:
      in: path
      name: tag_name
      description: tag_name parameter for /v2/metadefs/namespaces/{namespace_name}/tags/{tag_name}
        API
      schema:
        type: string
      required: true
    images_image_id:
      in: path
      name: image_id
      description: image_id parameter for /v2/images/{image_id} API
      schema:
        type: string
      required: true
    stores_store_id:
      in: path
      name: store_id
      description: store_id parameter for /v2/stores/{store_id}/{image_id} API
      schema:
        type: string
      required: true
    stores_image_id:
      in: path
      name: image_id
      description: image_id parameter for /v2/stores/{store_id}/{image_id} API
      schema:
        type: string
      required: true
    images_tags_image_id:
      in: path
      name: image_id
      description: image_id parameter for /v2/images/{image_id}/tags/{tag_value} API
      schema:
        type: string
      required: true
    images_tags_tag_value:
      in: path
      name: tag_value
      description: tag_value parameter for /v2/images/{image_id}/tags/{tag_value}
        API
      schema:
        type: string
      required: true
    images_members_image_id:
      in: path
      name: image_id
      description: image_id parameter for /v2/images/{image_id}/members/{member_id}
        API
      schema:
        type: string
      required: true
    images_members_member_id:
      in: path
      name: member_id
      description: member_id parameter for /v2/images/{image_id}/members/{member_id}
        API
      schema:
        type: string
      required: true
    tasks_task_id:
      in: path
      name: task_id
      description: task_id parameter for /v2/tasks/{task_id} API
      schema:
        type: string
      required: true
    cache_image_id:
      in: path
      name: image_id
      description: image_id parameter for /v2/cache/{image_id} API
      schema:
        type: string
      required: true
